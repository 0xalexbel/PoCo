{
  "contractName": "WorkerpoolRegistry",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_previous",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_entry",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "master",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "previous",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "proxyCode",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "proxyCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerpoolOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_workerpoolDescription",
          "type": "string"
        }
      ],
      "name": "createWorkerpool",
      "outputs": [
        {
          "internalType": "contract Workerpool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerpoolOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_workerpoolDescription",
          "type": "string"
        }
      ],
      "name": "predictWorkerpool",
      "outputs": [
        {
          "internalType": "contract Workerpool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerpoolOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_workerpoolDescription\",\"type\":\"string\"}],\"name\":\"createWorkerpool\",\"outputs\":[{\"internalType\":\"contract Workerpool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_previous\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entry\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerpoolOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_workerpoolDescription\",\"type\":\"string\"}],\"name\":\"predictWorkerpool\",\"outputs\":[{\"internalType\":\"contract Workerpool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previous\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"constructor\":\"Constructor\"}}},\"settings\":{\"compilationTarget\":{\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol\":\"WorkerpoolRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/IRegistry.sol\":{\"keccak256\":\"0x22cd93dce3ec7f424ca689cdd4d5aa6a7d0d5ff81133c8530c5397f206100b84\",\"urls\":[\"bzz-raw://3a12bb04edc05201d7b0f00d7a401152daaa0ee2fd794a848fd760290edcfffa\",\"dweb:/ipfs/QmXYRdrHLLcutF1JLcKSKiCRMxo5X4713BfXFYM4gzrXWc\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/Registry.sol\":{\"keccak256\":\"0x0699a487f0fa91ae957a4a51188d73a70ab17cf999f7ee007b553829ea4c561d\",\"urls\":[\"bzz-raw://c63c0e3f0f8600758aeab3ddb6030ca37a4fda497317948cc38989e1410ea1e8\",\"dweb:/ipfs/QmQFVj9tFEbKpqTzH9YHQoUpM79EvRZFR2fTDeiiiyVViC\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/RegistryEntry.sol\":{\"keccak256\":\"0xc5b8b64b19a7f26bdeda8dce637b65c16388adfdc6a77e02455c74722908ed8b\",\"urls\":[\"bzz-raw://a25ccdaeff6f497a58b6b5fda0f82a53243e51be2f59a8ebd4f3f294a95c9f03\",\"dweb:/ipfs/QmWNqwVbTmdVjYYuEaG32HR8P2fDWbTD6YDGX2B623976a\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/Workerpool.sol\":{\"keccak256\":\"0xba54886c81794791a38e974d2b24f0789ad21b2a55a0b65abb63596b4e19d888\",\"urls\":[\"bzz-raw://cc6da6f555b9618d54b5a952ebed60fdd469f26dd938adb3d29fe3c1564465f5\",\"dweb:/ipfs/QmbAKdBrNrjF8YGgWL7LtLhRUH2nwpgD1KBiNE6Xd7Cn4q\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol\":{\"keccak256\":\"0x49263aad62d5c05128fdc6bf53ce1e5b95d1f64b12b2d036de1813dde00bef44\",\"urls\":[\"bzz-raw://bc3cb097f3451c5212b4754854eeecd053df135586edc2f95dac88b51020ca6a\",\"dweb:/ipfs/QmafjJ3ba1DVaHzuV91un5A2K97TYyNMqtdjsPbwST6qKD\"]},\"@ensdomains/ens/contracts/ENS.sol\":{\"keccak256\":\"0x10b88673d8c180cd62523be4fec7607c65594eb4f0c561fa0fbc0784422b4871\",\"urls\":[\"bzz-raw://b3de1882a4a1a1b13c27ee6dc04cc58c34ac392c80cad507de2cdfa8c02712fe\",\"dweb:/ipfs/QmeKcaBF8QdJjXiqFrPJkAtK3et5kUL8XJrnHjwhAThRMT\"]},\"@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol\":{\"keccak256\":\"0xf3f46b28b19d9132ae78c2a43263c06a73cb042ce25175b732e0c1a41c5bbe5a\",\"urls\":[\"bzz-raw://7ca85a78f3f3eafbef6d72c5cd0c35e5b827c797af786cd170659499a0a2c3be\",\"dweb:/ipfs/QmbHZ8zFsiE1PRh7FKt1pt5jR8F6B8HiZ32Mgc8Py3qCUu\"]},\"@iexec/solidity/contracts/Upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x47ec56a1226ecf04d49aa82f768814923c1957b69f7fc9e7e470885c75b5a2c6\",\"urls\":[\"bzz-raw://4eae82be03a247a27a2948ed12d5a826dea977f4b5528830c19d9cf4c23dcd53\",\"dweb:/ipfs/Qmb9HtnohAMvjb7vYnXaT3AnQd9p9sLsThnyLnXVzz1umq\"]},\"@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0xe1bf07e5d913bd04484305a3fb0cc576f6b5d8e4fc0406bf7c9a8b6b2ed766e5\",\"urls\":[\"bzz-raw://b42f6dff696ceadeb44a02aae3049e603984c18af8d94f33fb6544a8b279179c\",\"dweb:/ipfs/QmRWTaRHCGZhKZFKrVAJwXukXiCZcezrVhJJ28H2qBbai7\"]},\"@iexec/solidity/contracts/Upgradeability/Proxy.sol\":{\"keccak256\":\"0xd89f285d80cfeff0efc87f11dbc024a587da3bba142a06695cbac7e4050e9302\",\"urls\":[\"bzz-raw://9c8323ec7efc9fde6c1529f1070c3f3406adb5f8836b17221530d8f0110fe3f4\",\"dweb:/ipfs/QmURRsX9L2gZ83aMULtY1EuRMJExHhFYErCbkxE5CNkAzE\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6cd80ccf035f3e77640b0447c06eb66f4e57658cf1d1dada3a7b48346ae4f549\",\"urls\":[\"bzz-raw://738ad925fdb37701cfea66d4ed4fca4074bf145d0b6b6c45cfd96b2845bff4df\",\"dweb:/ipfs/QmYuZLGiKTG4EDu67qcpotzSd4Nc5jAkYFjG2GsRF85KSR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x34726f200d88943561936daf5297552636b58b57ecd3eca6494d678d93d03252\",\"urls\":[\"bzz-raw://dee47bb5e1ef4b3b8ffd3edd9d1d774249c546d4ae890c46605dd9eda73ff7eb\",\"dweb:/ipfs/QmRKJyJDbjbaf8LLnw1jcpZ47VbU2c9gYT2xZSp19m55aM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x66d1ed2a353be8d2492833a185c53a8f1de8d8fa575a201e9825cf334d79659a\",\"urls\":[\"bzz-raw://a2e9b79e9cf5b398cd29b30df860a6521eefadd9882a346c423afbee5aee606e\",\"dweb:/ipfs/QmUq7gfqR5x1DaMpRKkWwmLMGLPzqUQhqhFEJ2vcgvFraH\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xaf17cd6e2d9f484546d48a0e9e7e279e4e90436c16df7fc3b562e58594f268d7\",\"urls\":[\"bzz-raw://7559f5728423b275e0cbb3e787d2c79115ad09e146abfedf10fb50e507fbf1a5\",\"dweb:/ipfs/QmX4jFGeYtL3QSfoS1HNQpytnjKvq7fHszAjvn42AVGHSn\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb94a03de3c8602a90c917ec7537b962dcf2cce2f2bd5f266e6ad790b45c10b97\",\"urls\":[\"bzz-raw://9291ee41737c8e8f37e6cae30dc2bf7145a99985b29e02120d57190369273562\",\"dweb:/ipfs/QmeFJtn4SVTGRKRsh2cCxa2gisLvNbQf5KvgHeUaF1Pzbv\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x476e7a0d57c1c7411656bb6e62ed3800ecdede111bd85584a05faae980b18f36\",\"urls\":[\"bzz-raw://1c7658452dd9f6583c9abf81080bcd4e4eab0f1a572432abf82ccc75d61207bf\",\"dweb:/ipfs/QmUrwAsCNTJ8noNdvUKfbigmoHWmGcZJVU6yF29mrELRUM\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200002090620002f7565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b50604080518082018252601e81527f694578656320576f726b6572706f6f6c20526567697374727920285635290000602080830191909152825180840190935260118352706945786563576f726b6572706f6f6c563560781b90830152908181620000b86301ffc9a760e01b6001600160e01b036200026d16565b8151620000cd90600690602085019062000305565b508051620000e390600790602084019062000305565b50620000ff6380ac58cd60e01b6001600160e01b036200026d16565b6200011a635b5e139f60e01b6001600160e01b036200026d16565b6200013563780e9d6360e01b6001600160e01b036200026d16565b50600090506200014d6001600160e01b03620002f216565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600b80546001600160a01b0319166001600160a01b038516179055604051620001c7602082016200038a565b601f1982820381018352601f909101166040528051620001f191600c916020919091019062000305565b50600c6040518082805460018160011615610100020316600290048015620002535780601f106200023057610100808354040283529182019162000253565b820191906000526020600020905b8154815290600101906020018083116200023e575b5050604051908190039020600d5550620003b59350505050565b6001600160e01b03198082161415620002cd576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b335b90565b6108298062002e6683390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034857805160ff191683800117855562000378565b8280016001018555821562000378579182015b82811115620003785782518255916020019190600101906200035b565b506200038692915062000398565b5090565b6103cd806200368f83390190565b620002f491905b808211156200038657600081556001016200039f565b612aa180620003c56000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636fa59bbc1161010f578063c3c5a547116100a2578063e985e9c511610071578063e985e9c514610796578063ee97f7f3146107c4578063eee39111146107cc578063f2fde38b146107d4576101e5565b8063c3c5a547146106af578063c4d66de8146106d5578063c87b56dd146106fb578063e40238f414610718576101e5565b80638da5cb5b116100de5780638da5cb5b146105ad57806395d89b41146105b5578063a22cb465146105bd578063b88d4fde146105eb576101e5565b80636fa59bbc1461056f57806370a0823114610577578063715018a61461059d5780637c2b2e71146105a5576101e5565b806323b872dd116101875780634f6ccce7116101565780634f6ccce7146104bf57806355f804b3146104dc5780636352211e1461054a5780636c0360eb14610567576101e5565b806323b872dd146103a95780632f745c59146103df5780633121db1c1461040b57806342842e0e14610489576101e5565b8063081812fc116101c3578063081812fc1461033c578063095ea7b314610359578063158ef93e1461038757806318160ddd1461038f576101e5565b806301ffc9a7146101ea578063064a6c2a1461022557806306fdde03146102bf575b600080fd5b6102116004803603602081101561020057600080fd5b50356001600160e01b0319166107fa565b604080519115158252519081900360200190f35b6102a36004803603604081101561023b57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561026557600080fd5b82018360208201111561027757600080fd5b803590602001918460018302840111600160201b8311171561029857600080fd5b50909250905061081d565b604080516001600160a01b039092168252519081900360200190f35b6102c7610871565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103015781810151838201526020016102e9565b50505050905090810190601f16801561032e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603602081101561035257600080fd5b5035610908565b6103856004803603604081101561036f57600080fd5b506001600160a01b03813516906020013561096a565b005b610211610a45565b610397610a55565b60408051918252519081900360200190f35b610385600480360360608110156103bf57600080fd5b506001600160a01b03813581169160208101359091169060400135610a66565b610397600480360360408110156103f557600080fd5b506001600160a01b038135169060200135610abd565b6103856004803603604081101561042157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561044b57600080fd5b82018360208201111561045d57600080fd5b803590602001918460018302840111600160201b8311171561047e57600080fd5b509092509050610aee565b6103856004803603606081101561049f57600080fd5b506001600160a01b03813581169160208101359091169060400135610b86565b610397600480360360208110156104d557600080fd5b5035610ba1565b610385600480360360208110156104f257600080fd5b810190602081018135600160201b81111561050c57600080fd5b82018360208201111561051e57600080fd5b803590602001918460018302840111600160201b8311171561053f57600080fd5b509092509050610bbd565b6102a36004803603602081101561056057600080fd5b5035610c58565b6102c7610c86565b6102c7610ce7565b6103976004803603602081101561058d57600080fd5b50356001600160a01b0316610d75565b610385610ddd565b6102a3610e7f565b6102a3610e8e565b6102c7610e9d565b610385600480360360408110156105d357600080fd5b506001600160a01b0381351690602001351515610efe565b6103856004803603608081101561060157600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561063b57600080fd5b82018360208201111561064d57600080fd5b803590602001918460018302840111600160201b8311171561066e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611003945050505050565b610211600480360360208110156106c557600080fd5b50356001600160a01b0316611061565b610385600480360360208110156106eb57600080fd5b50356001600160a01b031661110f565b6102c76004803603602081101561071157600080fd5b50356111af565b6102a36004803603604081101561072e57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561075857600080fd5b82018360208201111561076a57600080fd5b803590602001918460018302840111600160201b8311171561078b57600080fd5b50909250905061137b565b610211600480360360408110156107ac57600080fd5b506001600160a01b03813581169160200135166113c5565b6102a36113f3565b610397611402565b610385600480360360208110156107ea57600080fd5b50356001600160a01b0316611408565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60006108678461086285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150192505050565b6115a6565b90505b9392505050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b505050505090505b90565b600061091382611650565b61094e5760405162461bcd60e51b815260040180806020018281038252602c81526020018061294a602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061097582610c58565b9050806001600160a01b0316836001600160a01b031614156109c85760405162461bcd60e51b8152600401808060200182810382526021815260200180612a1a6021913960400191505060405180910390fd5b806001600160a01b03166109da611663565b6001600160a01b031614806109fb57506109fb816109f6611663565b6113c5565b610a365760405162461bcd60e51b815260040180806020018281038252603881526020018061289d6038913960400191505060405180910390fd5b610a408383611667565b505050565b600e54600160a01b900460ff1681565b6000610a6160026116d5565b905090565b610a77610a71611663565b826116e0565b610ab25760405162461bcd60e51b8152600401808060200182810382526031815260200180612a3b6031913960400191505060405180910390fd5b610a40838383611784565b6001600160a01b0382166000908152600160205260408120610ae5908363ffffffff6118e216565b90505b92915050565b610af6611663565b600a546001600160a01b03908116911614610b46576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b610a408383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118ee92505050565b610a4083838360405180602001604052806000815250611003565b600080610bb560028463ffffffff611a5316565b509392505050565b610bc5611663565b600a546001600160a01b03908116911614610c15576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b610c5482828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a6f92505050565b5050565b6000610ae8826040518060600160405280602981526020016128ff602991396002919063ffffffff611a8216565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d6d5780601f10610d4257610100808354040283529160200191610d6d565b820191906000526020600020905b815481529060010190602001808311610d5057829003601f168201915b505050505081565b60006001600160a01b038216610dbc5760405162461bcd60e51b815260040180806020018281038252602a8152602001806128d5602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600160205260409020610ae8906116d5565b610de5611663565b600a546001600160a01b03908116911614610e35576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600e546001600160a01b031681565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b610f06611663565b6001600160a01b0316826001600160a01b03161415610f6c576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610f79611663565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610fbd611663565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61101461100e611663565b836116e0565b61104f5760405162461bcd60e51b8152600401808060200182810382526031815260200180612a3b6031913960400191505060405180910390fd5b61105b84848484611a8f565b50505050565b6000611075826001600160a01b0316611650565b80610ae85750600e546001600160a01b031615801590610ae85750600e546040805163c3c5a54760e01b81526001600160a01b0385811660048301529151919092169163c3c5a547916024808301926020929190829003018186803b1580156110dd57600080fd5b505afa1580156110f1573d6000803e3d6000fd5b505050506040513d602081101561110757600080fd5b505192915050565b611117611663565b600a546001600160a01b03908116911614611167576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b600e54600160a01b900460ff161561117e57600080fd5b600e8054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b0392909216919091179055565b60606111ba82611650565b6111f55760405162461bcd60e51b815260040180806020018281038252602f8152602001806129eb602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084526060939283018282801561128a5780601f1061125f5761010080835404028352916020019161128a565b820191906000526020600020905b81548152906001019060200180831161126d57829003601f168201915b505050505090508051600014156112b1575050604080516020810190915260008152610818565b60098160405160200180838054600181600116156101000203166002900480156113125780601f106112f0576101008083540402835291820191611312565b820191906000526020600020905b8154815290600101906020018083116112fe575b5050825160208401908083835b6020831061133e5780518252601f19909201916020918201910161131f565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610818565b6000610867846113c085858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150192505050565b611ae1565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600b546001600160a01b031681565b600d5481565b611410611663565b600a546001600160a01b03908116911614611460576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b6001600160a01b0381166114a55760405162461bcd60e51b81526004018080602001828103825260268152602001806128276026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6060816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561154457818101518382015260200161152c565b50505050905090810190601f1680156115715780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316631ec5a31160e31b1790529350505050919050565b60008061163f83856040516020018083805190602001908083835b602083106115e05780518252601f1990920191602091820191016115c1565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600d54611d26565b6001600160a01b0316949350505050565b6000610ae860028363ffffffff611d3316565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061169c82610c58565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610ae882611d3f565b60006116eb82611650565b6117265760405162461bcd60e51b815260040180806020018281038252602c815260200180612871602c913960400191505060405180910390fd5b600061173183610c58565b9050806001600160a01b0316846001600160a01b0316148061176c5750836001600160a01b031661176184610908565b6001600160a01b0316145b8061177c575061177c81856113c5565b949350505050565b826001600160a01b031661179782610c58565b6001600160a01b0316146117dc5760405162461bcd60e51b81526004018080602001828103825260298152602001806129c26029913960400191505060405180910390fd5b6001600160a01b0382166118215760405162461bcd60e51b815260040180806020018281038252602481526020018061284d6024913960400191505060405180910390fd5b61182c838383610a40565b611837600082611667565b6001600160a01b038316600090815260016020526040902061185f908263ffffffff611d4316565b506001600160a01b0382166000908152600160205260409020611888908263ffffffff611d4f16565b5061189b6002828463ffffffff611d5b16565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610ae58383611d71565b604080516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2600482015290516001600160a01b038416916302571be3916024808301926020929190829003018186803b15801561195457600080fd5b505afa158015611968573d6000803e3d6000fd5b505050506040513d602081101561197e57600080fd5b505160405163c47f002760e01b81526020600482018181528451602484015284516001600160a01b039094169363c47f002793869383926044909201919085019080838360005b838110156119dd5781810151838201526020016119c5565b50505050905090810190601f168015611a0a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611a2957600080fd5b505af1158015611a3d573d6000803e3d6000fd5b505050506040513d602081101561105b57600080fd5b6000808080611a628686611dd5565b9097909650945050505050565b8051610c5490600990602084019061273a565b6000610867848484611e50565b611a9a848484611784565b611aa684848484611f1a565b61105b5760405162461bcd60e51b81526004018080602001828103825260328152602001806127f56032913960400191505060405180910390fd5b600080611c14600084866040516020018083805190602001908083835b60208310611b1d5780518252601f199092019160209182019101611afe565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c0a5780601f10611bdf57610100808354040283529160200191611c0a565b820191906000526020600020905b815481529060010190602001808311611bed57829003601f168201915b5050505050612155565b600b546040805163347d5e2560e21b81526001600160a01b0392831660048201818152602483019384528851604484015288519596509386169463d1f5789494919389939091606490910190602085019080838360005b83811015611c83578181015183820152602001611c6b565b50505050905090810190601f168015611cb05780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611cd057600080fd5b505af1158015611ce4573d6000803e3d6000fd5b50505050611cfb84826001600160a01b0316612266565b611d166001600160a01b038216611d11816123a0565b61247b565b6001600160a01b03169392505050565b6000610ae58383306124de565b6000610ae58383612542565b5490565b6000610ae5838361255a565b6000610ae58383612620565b600061086784846001600160a01b03851661266a565b81546000908210611db35760405162461bcd60e51b81526004018080602001828103825260228152602001806127d36022913960400191505060405180910390fd5b826000018281548110611dc257fe5b9060005260206000200154905092915050565b815460009081908310611e195760405162461bcd60e51b81526004018080602001828103825260228152602001806129286022913960400191505060405180910390fd5b6000846000018481548110611e2a57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611eeb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611eb0578181015183820152602001611e98565b50505050905090810190601f168015611edd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611efe57fe5b9060005260206000209060020201600101549150509392505050565b6000611f2e846001600160a01b0316612701565b611f3a5750600161177c565b600060606001600160a01b038616630a85bd0160e11b611f58611663565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611fd1578181015183820152602001611fb9565b50505050905090810190601f168015611ffe5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106120665780518252601f199092019160209182019101612047565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146120c8576040519150601f19603f3d011682016040523d82523d6000602084013e6120cd565b606091505b50915091508161211e578051156120e75780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806127f56032913960400191505060405180910390fd5b600081806020019051602081101561213557600080fd5b50516001600160e01b031916630a85bd0160e11b14935061177c92505050565b600080844710156121ad576040805162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b8251612200576040805162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015290519081900360640190fd5b8383516020850187f590506001600160a01b038116610867576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b6001600160a01b0382166122c1576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6122ca81611650565b1561231c576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61232860008383610a40565b6001600160a01b0382166000908152600160205260409020612350908263ffffffff611d4f16565b506123636002828463ffffffff611d5b16565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816123c557506040805180820190915260018152600360fc1b6020820152610818565b8160005b81156123dd57600101600a820491506123c9565b60608167ffffffffffffffff811180156123f657600080fd5b506040519080825280601f01601f191660200182016040528015612421576020820181803683370190505b50859350905060001982015b831561247257600a840660300160f81b8282806001900393508151811061245057fe5b60200101906001600160f81b031916908160001a905350600a8404935061242d565b50949350505050565b61248482611650565b6124bf5760405162461bcd60e51b815260040180806020018281038252602c815260200180612976602c913960400191505060405180910390fd5b60008281526008602090815260409091208251610a409284019061273a565b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff19166021820152603581019490945260558085019390935280518085039093018352607590930190925280519101206001600160a01b031690565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015612616578354600019808301919081019060009087908390811061258d57fe5b90600052602060002001549050808760000184815481106125aa57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806125da57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610ae8565b6000915050610ae8565b600061262c8383612542565b61266257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ae8565b506000610ae8565b6000828152600184016020526040812054806126cf57505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561086a565b828560000160018303815481106126e257fe5b906000526020600020906002020160010181905550600091505061086a565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061177c575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061277b57805160ff19168380011785556127a8565b828001600101855582156127a8579182015b828111156127a857825182559160200191906001019061278d565b506127b49291506127b8565b5090565b61090591905b808211156127b457600081556001016127be56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220cdb8befc245fbf3bb0190e4794d4691518061b3d152a67b913aa277e364bc34864736f6c63430006060033608060405234801561001057600080fd5b50610809806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146101ca578063b55e75af146101d2578063f199413c146101da578063f62d1888146101fd57610088565b80633121db1c1461008d578063584feb3a1461010f5780637b1039991461018c57806387639c68146101b0575b600080fd5b61010d600480360360408110156100a357600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ce57600080fd5b8201836020820111156100e057600080fd5b8035906020019184600183028401116401000000008311171561010257600080fd5b5090925090506102a3565b005b610117610346565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610151578181015183820152602001610139565b50505050905090810190601f16801561017e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101946103d3565b604080516001600160a01b039092168252519081900360200190f35b6101b86103e2565b60408051918252519081900360200190f35b6101946103e8565b6101b8610466565b61010d600480360360408110156101f057600080fd5b508035906020013561046c565b61010d6004803603602081101561021357600080fd5b81019060208101813564010000000081111561022e57600080fd5b82018360208201111561024057600080fd5b8035906020019184600183028401116401000000008311171561026257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610530945050505050565b336102ac6103e8565b6001600160a01b031614610301576040805162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015290519081900360640190fd5b6103418383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061055a92505050565b505050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b505050505081565b6000546001600160a01b031681565b60035481565b60008054604080516331a9108f60e11b815230600482015290516001600160a01b0390921691636352211e91602480820192602092909190829003018186803b15801561043457600080fd5b505afa158015610448573d6000803e3d6000fd5b505050506040513d602081101561045e57600080fd5b505190505b90565b60025481565b336104756103e8565b6001600160a01b0316146104ca576040805162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015290519081900360640190fd5b60648111156104d857600080fd5b60025460035460408051928352602083018590528281019190915260608201839052517f61f37ef3a6d587ce2d6be79492e1fac570f2745787015db7ed95ad4397b05c1e9181900360800190a1600291909155600355565b610539336106c5565b805161054c90600190602084019061073b565b5050601e6002556001600355565b604080516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2600482015290516001600160a01b038416916302571be3916024808301926020929190829003018186803b1580156105c057600080fd5b505afa1580156105d4573d6000803e3d6000fd5b505050506040513d60208110156105ea57600080fd5b505160405163c47f002760e01b81526020600482018181528451602484015284516001600160a01b039094169363c47f002793869383926044909201919085019080838360005b83811015610649578181015183820152602001610631565b50505050905090810190601f1680156106765780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b505050506040513d60208110156106bf57600080fd5b50505050565b6000546001600160a01b031615610719576040805162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061077c57805160ff19168380011785556107a9565b828001600101855582156107a9579182015b828111156107a957825182559160200191906001019061078e565b506107b59291506107b9565b5090565b61046391905b808211156107b557600081556001016107bf56fea264697066735822122020648786b4524ed08af276ba4d2272de89915d62c21511543febb7ab1280142b64736f6c63430006060033608060405234801561001057600080fd5b506103ad806100206000396000f3fe6080604052600436106100225760003560e01c8063d1f578941461003957610031565b366100315761002f6100ef565b005b61002f6100ef565b61002f6004803603604081101561004f57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561007a57600080fd5b82018360208201111561008c57600080fd5b803590602001918460018302840111640100000000831117156100ae57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610109945050505050565b6100f7610107565b61010761010261022c565b610251565b565b600061011361022c565b6001600160a01b03161461012657600080fd5b60405180602361031a82396040519081900360230190207f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c314905061016757fe5b61017082610275565b805115610228576000826001600160a01b0316826040518082805190602001908083835b602083106101b35780518252601f199092019160209182019101610194565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610213576040519150601f19603f3d011682016040523d82523d6000602084013e610218565b606091505b505090508061022657600080fd5b505b5050565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e808015610270573d6000f35b3d6000fd5b61027e816102dd565b6102b95760405162461bcd60e51b815260040180806020018281038252603b81526020018061033d603b913960400191505060405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061031157508115155b94935050505056fe6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220aba26a9b820bc0864305fc4079425084b46cf2b0366ff1738101bb17f58c20e964736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80636fa59bbc1161010f578063c3c5a547116100a2578063e985e9c511610071578063e985e9c514610796578063ee97f7f3146107c4578063eee39111146107cc578063f2fde38b146107d4576101e5565b8063c3c5a547146106af578063c4d66de8146106d5578063c87b56dd146106fb578063e40238f414610718576101e5565b80638da5cb5b116100de5780638da5cb5b146105ad57806395d89b41146105b5578063a22cb465146105bd578063b88d4fde146105eb576101e5565b80636fa59bbc1461056f57806370a0823114610577578063715018a61461059d5780637c2b2e71146105a5576101e5565b806323b872dd116101875780634f6ccce7116101565780634f6ccce7146104bf57806355f804b3146104dc5780636352211e1461054a5780636c0360eb14610567576101e5565b806323b872dd146103a95780632f745c59146103df5780633121db1c1461040b57806342842e0e14610489576101e5565b8063081812fc116101c3578063081812fc1461033c578063095ea7b314610359578063158ef93e1461038757806318160ddd1461038f576101e5565b806301ffc9a7146101ea578063064a6c2a1461022557806306fdde03146102bf575b600080fd5b6102116004803603602081101561020057600080fd5b50356001600160e01b0319166107fa565b604080519115158252519081900360200190f35b6102a36004803603604081101561023b57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561026557600080fd5b82018360208201111561027757600080fd5b803590602001918460018302840111600160201b8311171561029857600080fd5b50909250905061081d565b604080516001600160a01b039092168252519081900360200190f35b6102c7610871565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103015781810151838201526020016102e9565b50505050905090810190601f16801561032e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603602081101561035257600080fd5b5035610908565b6103856004803603604081101561036f57600080fd5b506001600160a01b03813516906020013561096a565b005b610211610a45565b610397610a55565b60408051918252519081900360200190f35b610385600480360360608110156103bf57600080fd5b506001600160a01b03813581169160208101359091169060400135610a66565b610397600480360360408110156103f557600080fd5b506001600160a01b038135169060200135610abd565b6103856004803603604081101561042157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561044b57600080fd5b82018360208201111561045d57600080fd5b803590602001918460018302840111600160201b8311171561047e57600080fd5b509092509050610aee565b6103856004803603606081101561049f57600080fd5b506001600160a01b03813581169160208101359091169060400135610b86565b610397600480360360208110156104d557600080fd5b5035610ba1565b610385600480360360208110156104f257600080fd5b810190602081018135600160201b81111561050c57600080fd5b82018360208201111561051e57600080fd5b803590602001918460018302840111600160201b8311171561053f57600080fd5b509092509050610bbd565b6102a36004803603602081101561056057600080fd5b5035610c58565b6102c7610c86565b6102c7610ce7565b6103976004803603602081101561058d57600080fd5b50356001600160a01b0316610d75565b610385610ddd565b6102a3610e7f565b6102a3610e8e565b6102c7610e9d565b610385600480360360408110156105d357600080fd5b506001600160a01b0381351690602001351515610efe565b6103856004803603608081101561060157600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561063b57600080fd5b82018360208201111561064d57600080fd5b803590602001918460018302840111600160201b8311171561066e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611003945050505050565b610211600480360360208110156106c557600080fd5b50356001600160a01b0316611061565b610385600480360360208110156106eb57600080fd5b50356001600160a01b031661110f565b6102c76004803603602081101561071157600080fd5b50356111af565b6102a36004803603604081101561072e57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561075857600080fd5b82018360208201111561076a57600080fd5b803590602001918460018302840111600160201b8311171561078b57600080fd5b50909250905061137b565b610211600480360360408110156107ac57600080fd5b506001600160a01b03813581169160200135166113c5565b6102a36113f3565b610397611402565b610385600480360360208110156107ea57600080fd5b50356001600160a01b0316611408565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60006108678461086285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150192505050565b6115a6565b90505b9392505050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b505050505090505b90565b600061091382611650565b61094e5760405162461bcd60e51b815260040180806020018281038252602c81526020018061294a602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061097582610c58565b9050806001600160a01b0316836001600160a01b031614156109c85760405162461bcd60e51b8152600401808060200182810382526021815260200180612a1a6021913960400191505060405180910390fd5b806001600160a01b03166109da611663565b6001600160a01b031614806109fb57506109fb816109f6611663565b6113c5565b610a365760405162461bcd60e51b815260040180806020018281038252603881526020018061289d6038913960400191505060405180910390fd5b610a408383611667565b505050565b600e54600160a01b900460ff1681565b6000610a6160026116d5565b905090565b610a77610a71611663565b826116e0565b610ab25760405162461bcd60e51b8152600401808060200182810382526031815260200180612a3b6031913960400191505060405180910390fd5b610a40838383611784565b6001600160a01b0382166000908152600160205260408120610ae5908363ffffffff6118e216565b90505b92915050565b610af6611663565b600a546001600160a01b03908116911614610b46576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b610a408383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118ee92505050565b610a4083838360405180602001604052806000815250611003565b600080610bb560028463ffffffff611a5316565b509392505050565b610bc5611663565b600a546001600160a01b03908116911614610c15576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b610c5482828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a6f92505050565b5050565b6000610ae8826040518060600160405280602981526020016128ff602991396002919063ffffffff611a8216565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d6d5780601f10610d4257610100808354040283529160200191610d6d565b820191906000526020600020905b815481529060010190602001808311610d5057829003601f168201915b505050505081565b60006001600160a01b038216610dbc5760405162461bcd60e51b815260040180806020018281038252602a8152602001806128d5602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600160205260409020610ae8906116d5565b610de5611663565b600a546001600160a01b03908116911614610e35576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600e546001600160a01b031681565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b610f06611663565b6001600160a01b0316826001600160a01b03161415610f6c576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610f79611663565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610fbd611663565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61101461100e611663565b836116e0565b61104f5760405162461bcd60e51b8152600401808060200182810382526031815260200180612a3b6031913960400191505060405180910390fd5b61105b84848484611a8f565b50505050565b6000611075826001600160a01b0316611650565b80610ae85750600e546001600160a01b031615801590610ae85750600e546040805163c3c5a54760e01b81526001600160a01b0385811660048301529151919092169163c3c5a547916024808301926020929190829003018186803b1580156110dd57600080fd5b505afa1580156110f1573d6000803e3d6000fd5b505050506040513d602081101561110757600080fd5b505192915050565b611117611663565b600a546001600160a01b03908116911614611167576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b600e54600160a01b900460ff161561117e57600080fd5b600e8054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b0392909216919091179055565b60606111ba82611650565b6111f55760405162461bcd60e51b815260040180806020018281038252602f8152602001806129eb602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084526060939283018282801561128a5780601f1061125f5761010080835404028352916020019161128a565b820191906000526020600020905b81548152906001019060200180831161126d57829003601f168201915b505050505090508051600014156112b1575050604080516020810190915260008152610818565b60098160405160200180838054600181600116156101000203166002900480156113125780601f106112f0576101008083540402835291820191611312565b820191906000526020600020905b8154815290600101906020018083116112fe575b5050825160208401908083835b6020831061133e5780518252601f19909201916020918201910161131f565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610818565b6000610867846113c085858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150192505050565b611ae1565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600b546001600160a01b031681565b600d5481565b611410611663565b600a546001600160a01b03908116911614611460576040805162461bcd60e51b815260206004820181905260248201526000805160206129a2833981519152604482015290519081900360640190fd5b6001600160a01b0381166114a55760405162461bcd60e51b81526004018080602001828103825260268152602001806128276026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6060816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561154457818101518382015260200161152c565b50505050905090810190601f1680156115715780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316631ec5a31160e31b1790529350505050919050565b60008061163f83856040516020018083805190602001908083835b602083106115e05780518252601f1990920191602091820191016115c1565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600d54611d26565b6001600160a01b0316949350505050565b6000610ae860028363ffffffff611d3316565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061169c82610c58565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610ae882611d3f565b60006116eb82611650565b6117265760405162461bcd60e51b815260040180806020018281038252602c815260200180612871602c913960400191505060405180910390fd5b600061173183610c58565b9050806001600160a01b0316846001600160a01b0316148061176c5750836001600160a01b031661176184610908565b6001600160a01b0316145b8061177c575061177c81856113c5565b949350505050565b826001600160a01b031661179782610c58565b6001600160a01b0316146117dc5760405162461bcd60e51b81526004018080602001828103825260298152602001806129c26029913960400191505060405180910390fd5b6001600160a01b0382166118215760405162461bcd60e51b815260040180806020018281038252602481526020018061284d6024913960400191505060405180910390fd5b61182c838383610a40565b611837600082611667565b6001600160a01b038316600090815260016020526040902061185f908263ffffffff611d4316565b506001600160a01b0382166000908152600160205260409020611888908263ffffffff611d4f16565b5061189b6002828463ffffffff611d5b16565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610ae58383611d71565b604080516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2600482015290516001600160a01b038416916302571be3916024808301926020929190829003018186803b15801561195457600080fd5b505afa158015611968573d6000803e3d6000fd5b505050506040513d602081101561197e57600080fd5b505160405163c47f002760e01b81526020600482018181528451602484015284516001600160a01b039094169363c47f002793869383926044909201919085019080838360005b838110156119dd5781810151838201526020016119c5565b50505050905090810190601f168015611a0a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611a2957600080fd5b505af1158015611a3d573d6000803e3d6000fd5b505050506040513d602081101561105b57600080fd5b6000808080611a628686611dd5565b9097909650945050505050565b8051610c5490600990602084019061273a565b6000610867848484611e50565b611a9a848484611784565b611aa684848484611f1a565b61105b5760405162461bcd60e51b81526004018080602001828103825260328152602001806127f56032913960400191505060405180910390fd5b600080611c14600084866040516020018083805190602001908083835b60208310611b1d5780518252601f199092019160209182019101611afe565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c0a5780601f10611bdf57610100808354040283529160200191611c0a565b820191906000526020600020905b815481529060010190602001808311611bed57829003601f168201915b5050505050612155565b600b546040805163347d5e2560e21b81526001600160a01b0392831660048201818152602483019384528851604484015288519596509386169463d1f5789494919389939091606490910190602085019080838360005b83811015611c83578181015183820152602001611c6b565b50505050905090810190601f168015611cb05780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611cd057600080fd5b505af1158015611ce4573d6000803e3d6000fd5b50505050611cfb84826001600160a01b0316612266565b611d166001600160a01b038216611d11816123a0565b61247b565b6001600160a01b03169392505050565b6000610ae58383306124de565b6000610ae58383612542565b5490565b6000610ae5838361255a565b6000610ae58383612620565b600061086784846001600160a01b03851661266a565b81546000908210611db35760405162461bcd60e51b81526004018080602001828103825260228152602001806127d36022913960400191505060405180910390fd5b826000018281548110611dc257fe5b9060005260206000200154905092915050565b815460009081908310611e195760405162461bcd60e51b81526004018080602001828103825260228152602001806129286022913960400191505060405180910390fd5b6000846000018481548110611e2a57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611eeb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611eb0578181015183820152602001611e98565b50505050905090810190601f168015611edd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611efe57fe5b9060005260206000209060020201600101549150509392505050565b6000611f2e846001600160a01b0316612701565b611f3a5750600161177c565b600060606001600160a01b038616630a85bd0160e11b611f58611663565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611fd1578181015183820152602001611fb9565b50505050905090810190601f168015611ffe5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106120665780518252601f199092019160209182019101612047565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146120c8576040519150601f19603f3d011682016040523d82523d6000602084013e6120cd565b606091505b50915091508161211e578051156120e75780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806127f56032913960400191505060405180910390fd5b600081806020019051602081101561213557600080fd5b50516001600160e01b031916630a85bd0160e11b14935061177c92505050565b600080844710156121ad576040805162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b8251612200576040805162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015290519081900360640190fd5b8383516020850187f590506001600160a01b038116610867576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b6001600160a01b0382166122c1576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6122ca81611650565b1561231c576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61232860008383610a40565b6001600160a01b0382166000908152600160205260409020612350908263ffffffff611d4f16565b506123636002828463ffffffff611d5b16565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816123c557506040805180820190915260018152600360fc1b6020820152610818565b8160005b81156123dd57600101600a820491506123c9565b60608167ffffffffffffffff811180156123f657600080fd5b506040519080825280601f01601f191660200182016040528015612421576020820181803683370190505b50859350905060001982015b831561247257600a840660300160f81b8282806001900393508151811061245057fe5b60200101906001600160f81b031916908160001a905350600a8404935061242d565b50949350505050565b61248482611650565b6124bf5760405162461bcd60e51b815260040180806020018281038252602c815260200180612976602c913960400191505060405180910390fd5b60008281526008602090815260409091208251610a409284019061273a565b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff19166021820152603581019490945260558085019390935280518085039093018352607590930190925280519101206001600160a01b031690565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015612616578354600019808301919081019060009087908390811061258d57fe5b90600052602060002001549050808760000184815481106125aa57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806125da57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610ae8565b6000915050610ae8565b600061262c8383612542565b61266257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ae8565b506000610ae8565b6000828152600184016020526040812054806126cf57505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561086a565b828560000160018303815481106126e257fe5b906000526020600020906002020160010181905550600091505061086a565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061177c575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061277b57805160ff19168380011785556127a8565b828001600101855582156127a8579182015b828111156127a857825182559160200191906001019061278d565b506127b49291506127b8565b5090565b61090591905b808211156127b457600081556001016127be56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220cdb8befc245fbf3bb0190e4794d4691518061b3d152a67b913aa277e364bc34864736f6c63430006060033",
  "sourceMap": "80:917:44:-:0;;;149:125;5:9:-1;2:2;;;27:1;24;17:12;2:2;149:125:44;191:16;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;660:247:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;660:247:37;;;;;;;718:40:67;-1:-1:-1;;;;;;;;718:18:67;:40;:::i;:::-;3426:12:71;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3448:16:71;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3552:40:71;-1:-1:-1;;;;;;;;3552:18:71;:40;:::i;:::-;3602:49;-1:-1:-1;;;;;;;;3602:18:71;:49;:::i;:::-;3661:51;-1:-1:-1;;;;;;;;3661:18:71;:51;:::i;:::-;-1:-1:-1;832:17:66;;-1:-1:-1;852:12:66;-1:-1:-1;;;;;852:10:66;:12;:::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:66;-1:-1:-1;;;;;874:18:66;;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:66;-1:-1:-1;;907:43:66;;-1:-1:-1;;907:43:66;-1:-1:-1;769:6:37::1;:23:::0;;-1:-1:-1;;;;;;769:23:37::1;-1:-1:-1::0;;;;;769:23:37;::::1;;::::0;;812:51:::1;::::0;::::1;;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;21:26;;;;;7:41;;87:2:::1;69:12:::0;;::::1;65:26;61:2;54:38:::0;796:67:37;;::::1;::::0;:9:::1;::::0;41:4:-1::1;30:16:::0;;;::::1;::::0;796:67:37::1;:::i;:::-;;893:9;883:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;883:20:37::1;::::0;;;;::::1;::::0;;867:13:::1;:36:::0;-1:-1:-1;80:917:44;;-1:-1:-1;;;;80:917:44;1449:198:67;-1:-1:-1;;;;;;1532:25:67;;;;;1524:66;;;;;-1:-1:-1;;;1524:66:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1600:33:67;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1600:40:67;1636:4;1600:40;;;1449:198::o;735:104:65:-;822:10;735:104;;:::o;80:917:44:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;80:917:44;;;-1:-1:-1;80:917:44;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "80:917:44:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;80:917:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:140:67;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;915:140:67;-1:-1:-1;;;;;;915:140:67;;:::i;:::-;;;;;;;;;;;;;;;;;;750:245:44;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;750:245:44;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;750:245:44;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;750:245:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;750:245:44;;-1:-1:-1;750:245:44;-1:-1:-1;750:245:44;:::i;:::-;;;;-1:-1:-1;;;;;750:245:44;;;;;;;;;;;;;;4625:90:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4625:90:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8519:209;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8519:209:71;;:::i;7853:381::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7853:381:71;;;;;;;;:::i;:::-;;628:28:37;;;:::i;6733:200:71:-;;;:::i;:::-;;;;;;;;;;;;;;;;10230:300;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;10230:300:71;;;;;;;;;;;;;;;;;:::i;6428:152::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6428:152:71;;;;;;;;:::i;1861:111:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;1861:111:37;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;1861:111:37;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1861:111:37;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1861:111:37;;-1:-1:-1;1861:111:37;-1:-1:-1;1861:111:37;:::i;11179:149:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;11179:149:71;;;;;;;;;;;;;;;;;:::i;7271:161::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7271:161:71;;:::i;1975:98:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1975:98:37;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;1975:98:37;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1975:98:37;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1975:98:37;;-1:-1:-1;1975:98:37;-1:-1:-1;1975:98:37;:::i;4353:167:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4353:167:71;;:::i;5967:87::-;;;:::i;538:26:37:-;;;:::i;3923:211:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3923:211:71;-1:-1:-1;;;;;3923:211:71;;:::i;1656:145:66:-;;;:::i;600:25:37:-;;;:::i;1033:77:66:-;;;:::i;4824:94:71:-;;;:::i;9027:290::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;9027:290:71;;;;;;;;;;:::i;12051:282::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;12051:282:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;12051:282:71;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12051:282:71;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12051:282:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12051:282:71;;-1:-1:-1;12051:282:71;;-1:-1:-1;;;;;12051:282:71:i;2093:187:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2093:187:37;-1:-1:-1;;;;;2093:187:37;;:::i;910:151::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;910:151:37;-1:-1:-1;;;;;910:151:37;;:::i;5221:552:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5221:552:71;;:::i;509:238:44:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;509:238:44;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;509:238:44;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;509:238:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;509:238:44;;-1:-1:-1;509:238:44;-1:-1:-1;509:238:44;:::i;9639:154:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;9639:154:71;;;;;;;;;;:::i;512:23:37:-;;;:::i;567:30::-;;;:::i;1950:240:66:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1950:240:66;-1:-1:-1;;;;;1950:240:66;;:::i;915:140:67:-;-1:-1:-1;;;;;;1015:33:67;;992:4;1015:33;;;;;;;;;;;;;915:140;;;;:::o;750:245:44:-;882:10;917:73;930:16;948:41;966:22;;948:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;948:17:44;;-1:-1:-1;;;948:41:44:i;:::-;917:12;:73::i;:::-;899:92;;750:245;;;;;;:::o;4625:90:71:-;4703:5;4696:12;;;;;;;;-1:-1:-1;;4696:12:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4671:13;;4696:12;;4703:5;;4696:12;;4703:5;4696:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:90;;:::o;8519:209::-;8587:7;8614:16;8622:7;8614;:16::i;:::-;8606:73;;;;-1:-1:-1;;;8606:73:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8697:24:71;;;;:15;:24;;;;;;-1:-1:-1;;;;;8697:24:71;;8519:209::o;7853:381::-;7933:13;7949:16;7957:7;7949;:16::i;:::-;7933:32;;7989:5;-1:-1:-1;;;;;7983:11:71;:2;-1:-1:-1;;;;;7983:11:71;;;7975:57;;;;-1:-1:-1;;;7975:57:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8067:5;-1:-1:-1;;;;;8051:21:71;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8051:21:71;;:62;;;;8076:37;8093:5;8100:12;:10;:12::i;:::-;8076:16;:37::i;:::-;8043:152;;;;-1:-1:-1;;;8043:152:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8206:21;8215:2;8219:7;8206:8;:21::i;:::-;7853:381;;;:::o;628:28:37:-;;;-1:-1:-1;;;628:28:37;;;;;:::o;6733:200:71:-;6786:7;6905:21;:12;:19;:21::i;:::-;6898:28;;6733:200;:::o;10230:300::-;10389:41;10408:12;:10;:12::i;:::-;10422:7;10389:18;:41::i;:::-;10381:103;;;;-1:-1:-1;;;10381:103:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10495:28;10505:4;10511:2;10515:7;10495:9;:28::i;6428:152::-;-1:-1:-1;;;;;6543:20:71;;6517:7;6543:20;;;:13;:20;;;;;:30;;6567:5;6543:30;:23;:30;:::i;:::-;6536:37;;6428:152;;;;;:::o;1861:111:37:-;1247:12:66;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:66;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:66;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:66;;;;;;;;;;;;;;;1942:26:37::1;1955:4;1962:5;;1942:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;1942:8:37::1;::::0;-1:-1:-1;;;1942:26:37:i:1;11179:149:71:-:0;11282:39;11299:4;11305:2;11309:7;11282:39;;;;;;;;;;;;:16;:39::i;7271:161::-;7338:7;;7379:22;:12;7395:5;7379:22;:15;:22;:::i;:::-;-1:-1:-1;7357:44:71;7271:161;-1:-1:-1;;;7271:161:71:o;1975:98:37:-;1247:12:66;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:66;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:66;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:66;;;;;;;;;;;;;;;2048:21:37::1;2060:8;;2048:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;2048:11:37::1;::::0;-1:-1:-1;;;2048:21:37:i:1;:::-;1975:98:::0;;:::o;4353:167:71:-;4417:7;4443:70;4460:7;4443:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;5967:87::-;6039:8;6032:15;;;;;;;;-1:-1:-1;;6032:15:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6007:13;;6032:15;;6039:8;;6032:15;;6039:8;6032:15;;;;;;;;;;;;;;;;;;;;;;;;538:26:37;;;;;;;;;;;;;;;-1:-1:-1;;538:26:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3923:211:71:-;3987:7;-1:-1:-1;;;;;4014:19:71;;4006:74;;;;-1:-1:-1;;;4006:74:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4098:20:71;;;;;;:13;:20;;;;;:29;;:27;:29::i;1656:145:66:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:66;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:66;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:66;;;;;;;;;;;;;;;1746:6:::1;::::0;1725:40:::1;::::0;1762:1:::1;::::0;-1:-1:-1;;;;;1746:6:66::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1775:6;:19:::0;;-1:-1:-1;;;;;;1775:19:66::1;::::0;;1656:145::o;600:25:37:-;;;-1:-1:-1;;;;;600:25:37;;:::o;1033:77:66:-;1097:6;;-1:-1:-1;;;;;1097:6:66;1033:77;:::o;4824:94:71:-;4904:7;4897:14;;;;;;;;-1:-1:-1;;4897:14:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4872:13;;4897:14;;4904:7;;4897:14;;4904:7;4897:14;;;;;;;;;;;;;;;;;;;;;;;;9027:290;9141:12;:10;:12::i;:::-;-1:-1:-1;;;;;9129:24:71;:8;-1:-1:-1;;;;;9129:24:71;;;9121:62;;;;;-1:-1:-1;;;9121:62:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;9239:8;9194:18;:32;9213:12;:10;:12::i;:::-;-1:-1:-1;;;;;9194:32:71;;;;;;;;;;;;;;;;;-1:-1:-1;9194:32:71;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;9194:53:71;;;;;;;;;;;9277:12;:10;:12::i;:::-;9262:48;;;;;;;;;;-1:-1:-1;;;;;9262:48:71;;;;;;;;;;;;;;9027:290;;:::o;12051:282::-;12182:41;12201:12;:10;:12::i;:::-;12215:7;12182:18;:41::i;:::-;12174:103;;;;-1:-1:-1;;;12174:103:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12287:39;12301:4;12307:2;12311:7;12320:5;12287:13;:39::i;:::-;12051:282;;;;:::o;2093:187:37:-;2164:4;2182:24;2198:6;-1:-1:-1;;;;;2190:15:37;2182:7;:24::i;:::-;:94;;;-1:-1:-1;2219:8:37;;-1:-1:-1;;;;;2219:8:37;2211:31;;;;:64;;-1:-1:-1;2246:8:37;;:29;;;-1:-1:-1;;;2246:29:37;;-1:-1:-1;;;;;2246:29:37;;;;;;;;;:8;;;;;:21;;:29;;;;;;;;;;;;;;:8;:29;;;2:2:-1;;;;27:1;24;17:12;2:2;2246:29:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2246:29:37;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2246:29:37;;2093:187;-1:-1:-1;;2093:187:37:o;910:151::-;1247:12:66;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:66;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:66;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:66;;;;;;;;;;;;;;;985:11:37::1;::::0;-1:-1:-1;;;985:11:37;::::1;;;984:12;976:21;;12:1:-1;9::::0;2:12:::1;976:21:37;1001:11;:18:::0;;-1:-1:-1;;;;;;;1001:18:37;;::::1;;-1:-1:-1::0;;;;;;1023:34:37::1;-1:-1:-1::0;;;;;1023:34:37;;;::::1;::::0;;;::::1;::::0;;910:151::o;5221:552:71:-;5286:13;5319:16;5327:7;5319;:16::i;:::-;5311:76;;;;-1:-1:-1;;;5311:76:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5424:19;;;;:10;:19;;;;;;;;;5398:45;;;;;;-1:-1:-1;;5398:45:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5424:19;5398:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5557:9;5551:23;5578:1;5551:28;5547:220;;;-1:-1:-1;;5595:9:71;;;;;;;;;-1:-1:-1;5595:9:71;;;;5547:220;5735:8;5745:9;5718:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5718:37:71;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5718:37:71;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5718:37:71;;;5704:52;;;;;509:238:44;635:10;670:72;682:16;700:41;718:22;;700:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;700:17:44;;-1:-1:-1;;;700:41:44:i;:::-;670:11;:72::i;9639:154:71:-;-1:-1:-1;;;;;9751:25:71;;;9728:4;9751:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;9639:154::o;512:23:37:-;;;-1:-1:-1;;;;;512:23:37;;:::o;567:30::-;;;;:::o;1950:240:66:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:66;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:66;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:66;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:22:66;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:66::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:6;::::0;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:66;;::::1;::::0;2139:6:::1;::::0;2118:38:::1;::::0;2139:6:::1;::::0;2118:38:::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:66::1;-1:-1:-1::0;;;;;2166:17:66;;;::::1;::::0;;;::::1;::::0;;1950:240::o;305:201:44:-;397:12;476:22;423:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;423:79:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:79:44;;;-1:-1:-1;;26:21;;;22:32;6:49;;423:79:44;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;423:79:44;-1:-1:-1;;;;305:201:44;;;:::o;1614:222:37:-;1696:7;1710:13;1726:81;1776:5;1783:6;1759:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1759:31:37;;;;;;;-1:-1:-1;;;;;1759:31:37;-1:-1:-1;;;;;1759:31:37;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1759:31:37;;;1749:42;;;;;;1793:13;;1726:22;:81::i;:::-;-1:-1:-1;;;;;1818:14:37;;1614:222;-1:-1:-1;;;;1614:222:37:o;13502:117:71:-;13559:4;13582:30;:12;13604:7;13582:30;:21;:30;:::i;735:104:65:-;822:10;735:104;:::o;20476:155:71:-;20541:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;20541:29:71;-1:-1:-1;;;;;20541:29:71;;;;;;;;:24;;20594:16;20541:24;20594:7;:16::i;:::-;-1:-1:-1;;;;;20585:39:71;;;;;;;;;;;20476:155;;:::o;6284:121:78:-;6353:7;6379:19;6387:3;6379:7;:19::i;13980:329:71:-;14065:4;14089:16;14097:7;14089;:16::i;:::-;14081:73;;;;-1:-1:-1;;;14081:73:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14164:13;14180:16;14188:7;14180;:16::i;:::-;14164:32;;14225:5;-1:-1:-1;;;;;14214:16:71;:7;-1:-1:-1;;;;;14214:16:71;;:51;;;;14258:7;-1:-1:-1;;;;;14234:31:71;:20;14246:7;14234:11;:20::i;:::-;-1:-1:-1;;;;;14234:31:71;;14214:51;:87;;;;14269:32;14286:5;14293:7;14269:16;:32::i;:::-;14206:96;13980:329;-1:-1:-1;;;;13980:329:71:o;17492:559::-;17609:4;-1:-1:-1;;;;;17589:24:71;:16;17597:7;17589;:16::i;:::-;-1:-1:-1;;;;;17589:24:71;;17581:78;;;;-1:-1:-1;;;17581:78:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17677:16:71;;17669:65;;;;-1:-1:-1;;;17669:65:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17745:39;17766:4;17772:2;17776:7;17745:20;:39::i;:::-;17846:29;17863:1;17867:7;17846:8;:29::i;:::-;-1:-1:-1;;;;;17886:19:71;;;;;;:13;:19;;;;;:35;;17913:7;17886:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;17931:17:71;;;;;;:13;:17;;;;;:30;;17953:7;17931:30;:21;:30;:::i;:::-;-1:-1:-1;17972:29:71;:12;17989:7;17998:2;17972:29;:16;:29;:::i;:::-;;18036:7;18032:2;-1:-1:-1;;;;;18017:27:71;18026:4;-1:-1:-1;;;;;18017:27:71;;;;;;;;;;;17492:559;;;:::o;7449:135:79:-;7520:7;7554:22;7558:3;7570:5;7554:3;:22::i;533:127:54:-;613:28;;;-1:-1:-1;;;613:28:54;;463:66;613:28;;;;;;-1:-1:-1;;;;;613:9:54;;;;;:28;;;;;;;;;;;;;;:9;:28;;;2:2:-1;;;;27:1;24;17:12;2:2;613:28:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;613:28:54;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;613:28:54;595:61;;-1:-1:-1;;;595:61:54;;613:28;595:61;;;;;;;;;;;;;;-1:-1:-1;;;;;595:55:54;;;;;;651:4;;595:61;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;595:61:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;595:61:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;595:61:54;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;6733:224:78;6813:7;;;;6872:22;6876:3;6888:5;6872:3;:22::i;:::-;6841:53;;;;-1:-1:-1;6733:224:78;-1:-1:-1;;;;;6733:224:78:o;18769:98:71:-;18841:19;;;;:8;;:19;;;;;:::i;7376:202:78:-;7483:7;7525:44;7530:3;7550;7556:12;7525:4;:44::i;13038:269:71:-;13151:28;13161:4;13167:2;13171:7;13151:9;:28::i;:::-;13197:48;13220:4;13226:2;13230:7;13239:5;13197:22;:48::i;:::-;13189:111;;;;-1:-1:-1;;;13189:111:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1079:532:37;1155:7;1195:13;1211:72;1226:1;1256:5;1263:6;1239:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1239:31:37;;;;;;;-1:-1:-1;;;;;1239:31:37;-1:-1:-1;;;;;1239:31:37;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1239:31:37;;;1229:42;;;;;;1273:9;1211:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:72::i;:::-;1418:6;;1358:74;;;-1:-1:-1;;;1358:74:37;;-1:-1:-1;;;;;1418:6:37;;;1358:74;;;;;;;;;;;;;;;;;;;;1195:88;;-1:-1:-1;1358:59:37;;;;;;1418:6;;1426:5;;1358:74;;;;;;;;;;;;;;1418:6;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1358:74:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1358:74:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1358:74:37;;;;1466:29;1472:6;1488:5;-1:-1:-1;;;;;1480:14:37;1466:5;:29::i;:::-;1517:65;-1:-1:-1;;;;;1530:14:37;;1546:35;1530:14;1546:19;:35::i;:::-;1517:12;:65::i;:::-;-1:-1:-1;;;;;1593:14:37;;1079:532;-1:-1:-1;;;1079:532:37:o;1719:165:77:-;1802:7;1828:49;1843:4;1849:12;1871:4;1828:14;:49::i;6052:149:78:-;6136:4;6159:35;6169:3;6189;6159:9;:35::i;3744:108::-;3826:19;;3744:108::o;6564:135:79:-;6634:4;6657:35;6665:3;6685:5;6657:7;:35::i;6267:129::-;6334:4;6357:32;6362:3;6382:5;6357:4;:32::i;5500:174:78:-;5589:4;5612:55;5617:3;5637;-1:-1:-1;;;;;5651:14:78;;5612:4;:55::i;4223:201:79:-;4317:18;;4290:7;;4317:26;-1:-1:-1;4309:73:79;;;;-1:-1:-1;;;4309:73:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4399:3;:11;;4411:5;4399:18;;;;;;;;;;;;;;;;4392:25;;4223:201;;;;:::o;4195:274:78:-;4298:19;;4262:7;;;;4298:27;-1:-1:-1;4290:74:78;;;;-1:-1:-1;;;4290:74:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:22;4400:3;:12;;4413:5;4400:19;;;;;;;;;;;;;;;;;;4375:44;;4437:5;:10;;;4449:5;:12;;;4429:33;;;;;4195:274;;;;;:::o;4876:315::-;4970:7;5008:17;;;:12;;;:17;;;;;;5058:12;5043:13;5035:36;;;;-1:-1:-1;;;5035:36:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5035:36:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5124:3;:12;;5148:1;5137:8;:12;5124:26;;;;;;;;;;;;;;;;;;:33;;;5117:40;;;4876:315;;;;;:::o;19420:1050:71:-;19540:4;19565:15;:2;-1:-1:-1;;;;;19565:13:71;;:15::i;:::-;19560:58;;-1:-1:-1;19603:4:71;19596:11;;19560:58;19687:12;19701:23;-1:-1:-1;;;;;19728:7:71;;-1:-1:-1;;;19831:12:71;:10;:12::i;:::-;19857:4;19875:7;19896:5;19736:175;;;;;;-1:-1:-1;;;;;19736:175:71;-1:-1:-1;;;;;19736:175:71;;;;;;-1:-1:-1;;;;;19736:175:71;-1:-1:-1;;;;;19736:175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;19736:175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19736:175:71;;;-1:-1:-1;;26:21;;;22:32;6:49;;19736:175:71;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;19736:175:71;;;179:29:-1;;;;160:49;;19728:184:71;;;19736:175;;19728:184;;-1:-1:-1;19728:184:71;;-1:-1:-1;25:18;-1:-1;19728:184:71;-1:-1:-1;19728:184:71;;-1:-1:-1;19728:184:71;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;19728:184:71;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;19686:226:71;;;;19927:7;19922:542;;19954:17;;:21;19950:376;;20119:10;20113:17;20179:15;20166:10;20162:2;20158:19;20151:44;20068:145;20251:60;;-1:-1:-1;;;20251:60:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19922:542;20356:13;20383:10;20372:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;20372:32:71;-1:-1:-1;;;;;;20426:26:71;-1:-1:-1;;;20426:26:71;;-1:-1:-1;20418:35:71;;-1:-1:-1;;;20418:35:71;980:535:77;1067:7;1086:12;1141:6;1116:21;:31;;1108:73;;;;;-1:-1:-1;;;1108:73:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:15;;1191:65;;;;;-1:-1:-1;;;1191:65:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:4;1396:8;1390:15;1383:4;1373:8;1369:19;1361:6;1353:59;1345:67;-1:-1:-1;;;;;;1439:18:77;;1431:56;;;;;-1:-1:-1;;;1431:56:77;;;;;;;;;;;;;;;;;;;;;;;;;;;16039:393:71;-1:-1:-1;;;;;16118:16:71;;16110:61;;;;;-1:-1:-1;;;16110:61:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16190:16;16198:7;16190;:16::i;:::-;16189:17;16181:58;;;;;-1:-1:-1;;;16181:58:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;16250:45;16279:1;16283:2;16287:7;16250:20;:45::i;:::-;-1:-1:-1;;;;;16306:17:71;;;;;;:13;:17;;;;;:30;;16328:7;16306:30;:21;:30;:::i;:::-;-1:-1:-1;16347:29:71;:12;16364:7;16373:2;16347:29;:16;:29;:::i;:::-;-1:-1:-1;16392:33:71;;16417:7;;-1:-1:-1;;;;;16392:33:71;;;16409:1;;16392:33;;16409:1;;16392:33;16039:393;;:::o;187:726:80:-;246:13;463:10;459:51;;-1:-1:-1;489:10:80;;;;;;;;;;;;-1:-1:-1;;;489:10:80;;;;;;459:51;534:5;519:12;573:75;580:9;;573:75;;605:8;;635:2;627:10;;;;573:75;;;657:19;689:6;679:17;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;679:17:80;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;679:17:80;87:42:-1;143:17;;-1:-1;679:17:80;-1:-1:-1;749:5:80;;-1:-1:-1;657:39:80;-1:-1:-1;;;722:10:80;;764:112;771:9;;764:112;;837:2;830:4;:9;825:2;:14;814:27;;796:6;803:7;;;;;;;796:15;;;;;;;;;;;:45;-1:-1:-1;;;;;796:45:80;;;;;;;;-1:-1:-1;863:2:80;855:10;;;;764:112;;;-1:-1:-1;899:6:80;187:726;-1:-1:-1;;;;187:726:80:o;18384:212:71:-;18483:16;18491:7;18483;:16::i;:::-;18475:73;;;;-1:-1:-1;;;18475:73:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18558:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;2127:282:77:-;2286:60;;;-1:-1:-1;;;;;;2286:60:77;;;;;;;;;;;;;-1:-1:-1;;2286:60:77;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2286:60:77;;;;;;;2263:93;;;;;-1:-1:-1;;;;;2373:29:77;;2127:282::o;3531:123:78:-;3602:4;3625:17;;;:12;;;;;:17;;;;;;:22;;;3531:123::o;1983:1512:79:-;2049:4;2186:19;;;:12;;;:19;;;;;;2220:15;;2216:1273;;2649:18;;-1:-1:-1;;2601:14:79;;;;2649:22;;;;2577:21;;2649:3;;:22;;2931;;;;;;;;;;;;;;2911:42;;3074:9;3045:3;:11;;3057:13;3045:26;;;;;;;;;;;;;;;;;;;:38;;;;3149:23;;;3191:1;3149:12;;;:23;;;;;;3175:17;;;3149:43;;3298:17;;3149:3;;3298:17;;;;;;;;;;;;;;;;;;;;;;3390:3;:12;;:19;3403:5;3390:19;;;;;;;;;;;3383:26;;;3431:4;3424:11;;;;;;;;2216:1273;3473:5;3466:12;;;;;1411:404;1474:4;1495:21;1505:3;1510:5;1495:9;:21::i;:::-;1490:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1532:11:79;:23;;;;;;;;;;;;;1712:18;;1690:19;;;:12;;;:19;;;;;;:40;;;;1744:11;;1490:319;-1:-1:-1;1793:5:79;1786:12;;1089:678:78;1165:4;1298:17;;;:12;;;:17;;;;;;1330:13;1326:435;;-1:-1:-1;;1414:38:78;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;1396:12:78;:57;;;;;;;;;;;;;;;;;;;;;;;;1608:19;;1588:17;;;:12;;;:17;;;;;;;:39;1641:11;;1326:435;1719:5;1683:3;:12;;1707:1;1696:8;:12;1683:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;1745:5;1738:12;;;;;685:610:76;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:76;;;1237:51;-1:-1:-1;;685:610:76:o;80:917:44:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;80:917:44;;;-1:-1:-1;80:917:44;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport '../Registry.sol';\nimport './Workerpool.sol';\n\n\ncontract WorkerpoolRegistry is Registry\n{\n\t/**\n\t * Constructor\n\t */\n\tconstructor()\n\tpublic Registry(\n\t\taddress(new Workerpool()),\n\t\t'iExec Workerpool Registry (V5)',\n\t\t'iExecWorkerpoolV5')\n\t{\n\t}\n\n\t/**\n\t * Pool creation\n\t */\n\tfunction encodeInitializer(\n\t\tstring memory _workerpoolDescription)\n\tinternal pure returns (bytes memory)\n\t{\n\t\treturn abi.encodeWithSignature(\n\t\t\t'initialize(string)'\n\t\t,\t_workerpoolDescription\n\t\t);\n\t}\n\n\tfunction createWorkerpool(\n\t\taddress          _workerpoolOwner,\n\t\tstring  calldata _workerpoolDescription)\n\texternal returns (Workerpool)\n\t{\n\t\treturn Workerpool(_mintCreate(_workerpoolOwner, encodeInitializer(_workerpoolDescription)));\n\t}\n\n\tfunction predictWorkerpool(\n\t\taddress          _workerpoolOwner,\n\t\tstring  calldata _workerpoolDescription)\n\texternal view returns (Workerpool)\n\t{\n\t\treturn Workerpool(_mintPredict(_workerpoolOwner, encodeInitializer(_workerpoolDescription)));\n\t}\n}\n",
  "sourcePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol",
  "ast": {
    "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol",
    "exportedSymbols": {
      "WorkerpoolRegistry": [
        8549
      ]
    },
    "id": 8550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8476,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/Registry.sol",
        "file": "../Registry.sol",
        "id": 8477,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 8016,
        "src": "25:25:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/Workerpool.sol",
        "file": "./Workerpool.sol",
        "id": 8478,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 8475,
        "src": "51:26:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8479,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8015,
              "src": "111:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$8015",
                "typeString": "contract Registry"
              }
            },
            "id": 8480,
            "nodeType": "InheritanceSpecifier",
            "src": "111:8:44"
          }
        ],
        "contractDependencies": [
          7780,
          8015,
          8474,
          10141,
          10767,
          10876,
          10932,
          10944,
          12143,
          12251,
          12279,
          12303
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8549,
        "linearizedBaseContracts": [
          8549,
          8015,
          10876,
          10141,
          12143,
          7780,
          12279,
          12303,
          12251,
          10932,
          10944,
          10767
        ],
        "name": "WorkerpoolRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8494,
              "nodeType": "Block",
              "src": "270:4:44",
              "statements": []
            },
            "documentation": {
              "id": 8481,
              "nodeType": "StructuredDocumentation",
              "src": "123:24:44",
              "text": "Constructor"
            },
            "id": 8495,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "191:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Workerpool_$8474_$",
                            "typeString": "function () returns (contract Workerpool)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 8486,
                            "name": "Workerpool",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 8474,
                            "src": "195:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Workerpool_$8474",
                              "typeString": "contract Workerpool"
                            }
                          }
                        },
                        "id": 8488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "191:16:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Workerpool_$8474",
                          "typeString": "contract Workerpool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Workerpool_$8474",
                          "typeString": "contract Workerpool"
                        }
                      ],
                      "id": 8485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "183:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8484,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "183:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 8489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "183:25:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "694578656320576f726b6572706f6f6c2052656769737472792028563529",
                    "id": 8490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:32:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ba5cb470918f8c7c0143edb5525432db3242608621e9c139ec8e475c5f001e5c",
                      "typeString": "literal_string \"iExec Workerpool Registry (V5)\""
                    },
                    "value": "iExec Workerpool Registry (V5)"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6945786563576f726b6572706f6f6c5635",
                    "id": 8491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "248:19:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_935bfc3bb81ca3e38c20eb5143fca20baaf727aceff2b180b02bd713e8d2b088",
                      "typeString": "literal_string \"iExecWorkerpoolV5\""
                    },
                    "value": "iExecWorkerpoolV5"
                  }
                ],
                "id": 8492,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8483,
                  "name": "Registry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8015,
                  "src": "171:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Registry_$8015_$",
                    "typeString": "type(contract Registry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "171:97:44"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:2:44"
            },
            "returnParameters": {
              "id": 8493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:44"
            },
            "scope": 8549,
            "src": "149:125:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8509,
              "nodeType": "Block",
              "src": "412:94:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a6528737472696e6729",
                        "id": 8505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "451:20:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        "value": "initialize(string)"
                      },
                      {
                        "argumentTypes": null,
                        "id": 8506,
                        "name": "_workerpoolDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8498,
                        "src": "476:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8503,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "423:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 8504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "423:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:79:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8502,
                  "id": 8508,
                  "nodeType": "Return",
                  "src": "416:86:44"
                }
              ]
            },
            "documentation": {
              "id": 8496,
              "nodeType": "StructuredDocumentation",
              "src": "277:26:44",
              "text": "Pool creation"
            },
            "id": 8510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeInitializer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8498,
                  "mutability": "mutable",
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8510,
                  "src": "335:36:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8497,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:41:44"
            },
            "returnParameters": {
              "id": 8502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8501,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8510,
                  "src": "397:12:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8500,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:14:44"
            },
            "scope": 8549,
            "src": "305:201:44",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8528,
              "nodeType": "Block",
              "src": "648:99:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8521,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8512,
                            "src": "682:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8523,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8514,
                                "src": "718:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8522,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8510,
                              "src": "700:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8520,
                          "name": "_mintCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7924,
                          "src": "670:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) returns (uint256)"
                          }
                        },
                        "id": 8525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:72:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8519,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8474,
                      "src": "659:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8474_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:84:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8518,
                  "id": 8527,
                  "nodeType": "Return",
                  "src": "652:91:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e40238f4",
            "id": 8529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8512,
                  "mutability": "mutable",
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8529,
                  "src": "538:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8514,
                  "mutability": "mutable",
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8529,
                  "src": "575:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:81:44"
            },
            "returnParameters": {
              "id": 8518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8517,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8529,
                  "src": "635:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8474",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8516,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8474,
                    "src": "635:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "634:12:44"
            },
            "scope": 8549,
            "src": "509:238:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8547,
              "nodeType": "Block",
              "src": "895:100:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8540,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8531,
                            "src": "930:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8542,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8533,
                                "src": "966:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8541,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8510,
                              "src": "948:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "948:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8539,
                          "name": "_mintPredict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7953,
                          "src": "917:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (uint256)"
                          }
                        },
                        "id": 8544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:73:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8538,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8474,
                      "src": "906:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8474_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:85:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8537,
                  "id": 8546,
                  "nodeType": "Return",
                  "src": "899:92:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "064a6c2a",
            "id": 8548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8531,
                  "mutability": "mutable",
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8548,
                  "src": "780:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8533,
                  "mutability": "mutable",
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8548,
                  "src": "817:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8532,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:81:44"
            },
            "returnParameters": {
              "id": 8537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8536,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8548,
                  "src": "882:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8474",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8535,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8474,
                    "src": "882:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:12:44"
            },
            "scope": 8549,
            "src": "750:245:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8550,
        "src": "80:917:44"
      }
    ],
    "src": "0:998:44"
  },
  "legacyAST": {
    "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol",
    "exportedSymbols": {
      "WorkerpoolRegistry": [
        8549
      ]
    },
    "id": 8550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8476,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/Registry.sol",
        "file": "../Registry.sol",
        "id": 8477,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 8016,
        "src": "25:25:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/Workerpool.sol",
        "file": "./Workerpool.sol",
        "id": 8478,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 8475,
        "src": "51:26:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8479,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8015,
              "src": "111:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$8015",
                "typeString": "contract Registry"
              }
            },
            "id": 8480,
            "nodeType": "InheritanceSpecifier",
            "src": "111:8:44"
          }
        ],
        "contractDependencies": [
          7780,
          8015,
          8474,
          10141,
          10767,
          10876,
          10932,
          10944,
          12143,
          12251,
          12279,
          12303
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8549,
        "linearizedBaseContracts": [
          8549,
          8015,
          10876,
          10141,
          12143,
          7780,
          12279,
          12303,
          12251,
          10932,
          10944,
          10767
        ],
        "name": "WorkerpoolRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8494,
              "nodeType": "Block",
              "src": "270:4:44",
              "statements": []
            },
            "documentation": {
              "id": 8481,
              "nodeType": "StructuredDocumentation",
              "src": "123:24:44",
              "text": "Constructor"
            },
            "id": 8495,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "191:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Workerpool_$8474_$",
                            "typeString": "function () returns (contract Workerpool)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 8486,
                            "name": "Workerpool",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 8474,
                            "src": "195:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Workerpool_$8474",
                              "typeString": "contract Workerpool"
                            }
                          }
                        },
                        "id": 8488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "191:16:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Workerpool_$8474",
                          "typeString": "contract Workerpool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Workerpool_$8474",
                          "typeString": "contract Workerpool"
                        }
                      ],
                      "id": 8485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "183:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8484,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "183:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 8489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "183:25:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "694578656320576f726b6572706f6f6c2052656769737472792028563529",
                    "id": 8490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:32:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ba5cb470918f8c7c0143edb5525432db3242608621e9c139ec8e475c5f001e5c",
                      "typeString": "literal_string \"iExec Workerpool Registry (V5)\""
                    },
                    "value": "iExec Workerpool Registry (V5)"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6945786563576f726b6572706f6f6c5635",
                    "id": 8491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "248:19:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_935bfc3bb81ca3e38c20eb5143fca20baaf727aceff2b180b02bd713e8d2b088",
                      "typeString": "literal_string \"iExecWorkerpoolV5\""
                    },
                    "value": "iExecWorkerpoolV5"
                  }
                ],
                "id": 8492,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8483,
                  "name": "Registry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8015,
                  "src": "171:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Registry_$8015_$",
                    "typeString": "type(contract Registry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "171:97:44"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:2:44"
            },
            "returnParameters": {
              "id": 8493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:44"
            },
            "scope": 8549,
            "src": "149:125:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8509,
              "nodeType": "Block",
              "src": "412:94:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a6528737472696e6729",
                        "id": 8505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "451:20:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        "value": "initialize(string)"
                      },
                      {
                        "argumentTypes": null,
                        "id": 8506,
                        "name": "_workerpoolDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8498,
                        "src": "476:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8503,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "423:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 8504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "423:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:79:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8502,
                  "id": 8508,
                  "nodeType": "Return",
                  "src": "416:86:44"
                }
              ]
            },
            "documentation": {
              "id": 8496,
              "nodeType": "StructuredDocumentation",
              "src": "277:26:44",
              "text": "Pool creation"
            },
            "id": 8510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeInitializer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8498,
                  "mutability": "mutable",
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8510,
                  "src": "335:36:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8497,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:41:44"
            },
            "returnParameters": {
              "id": 8502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8501,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8510,
                  "src": "397:12:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8500,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:14:44"
            },
            "scope": 8549,
            "src": "305:201:44",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8528,
              "nodeType": "Block",
              "src": "648:99:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8521,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8512,
                            "src": "682:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8523,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8514,
                                "src": "718:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8522,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8510,
                              "src": "700:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8520,
                          "name": "_mintCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7924,
                          "src": "670:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) returns (uint256)"
                          }
                        },
                        "id": 8525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:72:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8519,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8474,
                      "src": "659:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8474_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:84:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8518,
                  "id": 8527,
                  "nodeType": "Return",
                  "src": "652:91:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e40238f4",
            "id": 8529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8512,
                  "mutability": "mutable",
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8529,
                  "src": "538:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8514,
                  "mutability": "mutable",
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8529,
                  "src": "575:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:81:44"
            },
            "returnParameters": {
              "id": 8518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8517,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8529,
                  "src": "635:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8474",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8516,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8474,
                    "src": "635:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "634:12:44"
            },
            "scope": 8549,
            "src": "509:238:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8547,
              "nodeType": "Block",
              "src": "895:100:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8540,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8531,
                            "src": "930:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8542,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8533,
                                "src": "966:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8541,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8510,
                              "src": "948:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "948:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8539,
                          "name": "_mintPredict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7953,
                          "src": "917:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (uint256)"
                          }
                        },
                        "id": 8544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:73:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8538,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8474,
                      "src": "906:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8474_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:85:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8537,
                  "id": 8546,
                  "nodeType": "Return",
                  "src": "899:92:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "064a6c2a",
            "id": 8548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8531,
                  "mutability": "mutable",
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8548,
                  "src": "780:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8533,
                  "mutability": "mutable",
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8548,
                  "src": "817:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8532,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:81:44"
            },
            "returnParameters": {
              "id": 8537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8536,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8548,
                  "src": "882:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8474",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8535,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8474,
                    "src": "882:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8474",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:12:44"
            },
            "scope": 8549,
            "src": "750:245:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8550,
        "src": "80:917:44"
      }
    ],
    "src": "0:998:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-20T12:29:54.311Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Constructor"
    }
  }
}
