{
  "contractName": "WorkerpoolRegistry",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_previous",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_entry",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "master",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previous",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyCode",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerpoolOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_workerpoolDescription",
          "type": "string"
        }
      ],
      "name": "createWorkerpool",
      "outputs": [
        {
          "internalType": "contract Workerpool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerpoolOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_workerpoolDescription",
          "type": "string"
        }
      ],
      "name": "predictWorkerpool",
      "outputs": [
        {
          "internalType": "contract Workerpool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerpoolOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_workerpoolDescription\",\"type\":\"string\"}],\"name\":\"createWorkerpool\",\"outputs\":[{\"internalType\":\"contract Workerpool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_previous\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entry\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerpoolOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_workerpoolDescription\",\"type\":\"string\"}],\"name\":\"predictWorkerpool\",\"outputs\":[{\"internalType\":\"contract Workerpool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previous\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"constructor\":\"Constructor\"}}},\"settings\":{\"compilationTarget\":{\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol\":\"WorkerpoolRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/IRegistry.sol\":{\"keccak256\":\"0x22cd93dce3ec7f424ca689cdd4d5aa6a7d0d5ff81133c8530c5397f206100b84\",\"urls\":[\"bzz-raw://3a12bb04edc05201d7b0f00d7a401152daaa0ee2fd794a848fd760290edcfffa\",\"dweb:/ipfs/QmXYRdrHLLcutF1JLcKSKiCRMxo5X4713BfXFYM4gzrXWc\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/Registry.sol\":{\"keccak256\":\"0x06e86a3929e033a55818c2c2ae49cee7d21cc8e300d9d9defbb5c070f77eecda\",\"urls\":[\"bzz-raw://4fa3c0d87241caeb02c36bc1954a0cc0d71bd133ce0995de89544e3f72ffc628\",\"dweb:/ipfs/QmY3QSPBTniC1mvFgWA2jqK37cpyFeaQx8CXZumgtcftMX\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/RegistryEntry.sol\":{\"keccak256\":\"0xc5b8b64b19a7f26bdeda8dce637b65c16388adfdc6a77e02455c74722908ed8b\",\"urls\":[\"bzz-raw://a25ccdaeff6f497a58b6b5fda0f82a53243e51be2f59a8ebd4f3f294a95c9f03\",\"dweb:/ipfs/QmWNqwVbTmdVjYYuEaG32HR8P2fDWbTD6YDGX2B623976a\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/Workerpool.sol\":{\"keccak256\":\"0xba54886c81794791a38e974d2b24f0789ad21b2a55a0b65abb63596b4e19d888\",\"urls\":[\"bzz-raw://cc6da6f555b9618d54b5a952ebed60fdd469f26dd938adb3d29fe3c1564465f5\",\"dweb:/ipfs/QmbAKdBrNrjF8YGgWL7LtLhRUH2nwpgD1KBiNE6Xd7Cn4q\"]},\"/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol\":{\"keccak256\":\"0x06b5f8f52fee881e8f80fa6346b90f11a6d5540094a17c9948b86591b776106d\",\"urls\":[\"bzz-raw://4dcc44135619a9f931d29621a1a259d12ad1833d10ecf92267370b386562373d\",\"dweb:/ipfs/QmcfB3F9LqdaURTSzXmhaKbf729RUgs8SEkhhKTdFxbLVV\"]},\"@ensdomains/ens/contracts/ENS.sol\":{\"keccak256\":\"0x10b88673d8c180cd62523be4fec7607c65594eb4f0c561fa0fbc0784422b4871\",\"urls\":[\"bzz-raw://b3de1882a4a1a1b13c27ee6dc04cc58c34ac392c80cad507de2cdfa8c02712fe\",\"dweb:/ipfs/QmeKcaBF8QdJjXiqFrPJkAtK3et5kUL8XJrnHjwhAThRMT\"]},\"@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol\":{\"keccak256\":\"0xf3f46b28b19d9132ae78c2a43263c06a73cb042ce25175b732e0c1a41c5bbe5a\",\"urls\":[\"bzz-raw://7ca85a78f3f3eafbef6d72c5cd0c35e5b827c797af786cd170659499a0a2c3be\",\"dweb:/ipfs/QmbHZ8zFsiE1PRh7FKt1pt5jR8F6B8HiZ32Mgc8Py3qCUu\"]},\"@iexec/solidity/contracts/Upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x47ec56a1226ecf04d49aa82f768814923c1957b69f7fc9e7e470885c75b5a2c6\",\"urls\":[\"bzz-raw://4eae82be03a247a27a2948ed12d5a826dea977f4b5528830c19d9cf4c23dcd53\",\"dweb:/ipfs/Qmb9HtnohAMvjb7vYnXaT3AnQd9p9sLsThnyLnXVzz1umq\"]},\"@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0xe1bf07e5d913bd04484305a3fb0cc576f6b5d8e4fc0406bf7c9a8b6b2ed766e5\",\"urls\":[\"bzz-raw://b42f6dff696ceadeb44a02aae3049e603984c18af8d94f33fb6544a8b279179c\",\"dweb:/ipfs/QmRWTaRHCGZhKZFKrVAJwXukXiCZcezrVhJJ28H2qBbai7\"]},\"@iexec/solidity/contracts/Upgradeability/Proxy.sol\":{\"keccak256\":\"0xd89f285d80cfeff0efc87f11dbc024a587da3bba142a06695cbac7e4050e9302\",\"urls\":[\"bzz-raw://9c8323ec7efc9fde6c1529f1070c3f3406adb5f8836b17221530d8f0110fe3f4\",\"dweb:/ipfs/QmURRsX9L2gZ83aMULtY1EuRMJExHhFYErCbkxE5CNkAzE\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xdcbcec72a08dc49e64965d2587b74d8b88cee6bdeecd6337016b7da774478c36\",\"urls\":[\"bzz-raw://b560b4b9736acd02b7cde1925ce1374a4bc87de0d04ba944b0a7f4056b75383f\",\"dweb:/ipfs/QmWewRjMTXUgAHTRMWZ3DHRdYdUkKWjFT7C6kNjLh4T2wL\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe4ed9d633e8e678e8ece3756e4002cc7989b72cd29a17ecdacdabf4fd48820a7\",\"urls\":[\"bzz-raw://03a55c81a7d4c93a1ca6d9b931830c1fde2799bfbbf5841321f67e7b056c36c2\",\"dweb:/ipfs/QmbcgdfB278NvzVZKjA7Jf1NjSeCCQ2277mJGL4UskyS56\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x039ba4cb83f1b30a3c575283aebeab66035aa4a3d5c88e73a67dbfba3691ac23\",\"urls\":[\"bzz-raw://7e319b9647837e7b286b01ef90e1b2dc62aea6d17acc11145c822193b6454db1\",\"dweb:/ipfs/QmW5vUEeePdJfj3abT8XHcZKideyCpSuDnz65Vfp6yu62P\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x818233b2467c3cd7375f29a0ce2288ea6be2f28ab88e5f47c1456988967a4b52\",\"urls\":[\"bzz-raw://35508a62ba887f4e210f1a3e73912f88f88d9461bbafb30542757512cd004159\",\"dweb:/ipfs/QmeHzez7YWqiqqnoKdLjD6vhJoL7ct6rbbDC8wPSWQnra8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xc547c79e93885c12382ce5418c778cf35530fe2dec58ec7589b88f80fd403441\",\"urls\":[\"bzz-raw://ca00c24d18261a841d86908e05b28488682ffc275cc8e705cd43ecc5066a95d1\",\"dweb:/ipfs/QmetjXHEufQ86honw7zFAp1F5pxr33gxkhtpZRy6H9445u\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x53b5f24782d9b652d7a6c474f59775b728aeae6182c8226e3127a1b1ebc0094e\",\"urls\":[\"bzz-raw://f4131d6e2be088c1d6f534d72a650b12257a6bcbcff94c2c9438cbb872c1caff\",\"dweb:/ipfs/QmTcc8eNuneJ1ZhpwAfYREjN4DjGyuMyh5Wzh826BCzd9T\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x6c5f4342f7caa1e312f54a2e23d7096bd5edbdb1bd5018d71d31191ef96bc94c\",\"urls\":[\"bzz-raw://086c9a4ca228edc46f84a72ef5cf2e7a3cc7ec21779f50f134d6465fdafeca82\",\"dweb:/ipfs/QmXGRya8Gg6aTxcwjPniDxVmUUeFyD2qhXrCAqhrdaHEuU\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x289cea8081b3796fa10df273d903a1467332ac2edf008b51c03872c1a33e1ec2\",\"urls\":[\"bzz-raw://f1cf1f1ecb61b8b4990ed8a55efb0e9e3d6bbe9bedb2b46dde27a0f8a46b35d7\",\"dweb:/ipfs/QmdXJevKLPLvrPpLtGJtq5xEeLz3wv96vSwZSBjvUfjvkf\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x0a4e294dc71ba22f4464a26c30c44b19abe94c80fbdd6f3258da70e2cbeca0d2\",\"urls\":[\"bzz-raw://50bd4f8196d9a4faa2aeb518d783ebdb8081a7ad3d98b42cb09661325d65049b\",\"dweb:/ipfs/QmbtTja1Qo3oZyGM7qTTp4M6dPcVRX9bWEYQa9D9ifipA8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xbc0bed5d8dd8ce1c539f826a7bf171e26255fe0c1553866b3354215a33757fd6\",\"urls\":[\"bzz-raw://956162cf2a1f4e6aec23a691c95fd32fb67e3ca717d5c54c49a4268b57e76101\",\"dweb:/ipfs/QmXGWhMF57mqAerPWd62XYD1zoh8zogA5fkQkGkduzPepw\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dda04d1cbd7c09e7187c8d5c30074cc32f17e247adb84034c0b3e40dd96c74f\",\"urls\":[\"bzz-raw://2f06fa27e220da3d4e949b69ffc6225091ec031ad64cd5f9e9ea7c66c54304ae\",\"dweb:/ipfs/QmYBiLxdMBbhevWsGLLLSjpV92FqDVv5tB2LwiQsgwvLQz\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x96c4d9e88f86f089cb6ab60ecb9c38ed4fe74eac9c677ed68c9c91018983dc85\",\"urls\":[\"bzz-raw://549d3e459f32327f6d87f549d3aedc2c593bb83486db4fae7e28e5fd67793edd\",\"dweb:/ipfs/QmaomUsCuumBxtutqNDjNEEcaLM7b2LES2ZGxX5uBdFYtB\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80636fa59bbc1161010f578063b88d4fde116100a2578063e40238f411610071578063e40238f414610727578063e985e9c5146107a5578063ee97f7f3146107d3578063f2fde38b146107db576101e5565b8063b88d4fde146105fa578063c3c5a547146106be578063c4d66de8146106e4578063c87b56dd1461070a576101e5565b80638da5cb5b116100de5780638da5cb5b146105b45780638f32d59b146105bc57806395d89b41146105c4578063a22cb465146105cc576101e5565b80636fa59bbc1461057657806370a082311461057e578063715018a6146105a45780637c2b2e71146105ac576101e5565b806318160ddd1161018757806342842e0e1161015657806342842e0e146104fe5780634f6ccce7146105345780636352211e146105515780636c0360eb1461056e576101e5565b806318160ddd1461040457806323b872dd1461041e5780632f745c59146104545780633121db1c14610480576101e5565b8063081812fc116101c3578063081812fc1461033c578063095ea7b314610359578063158ef93e14610387578063162094c41461038f576101e5565b806301ffc9a7146101ea578063064a6c2a1461022557806306fdde03146102bf575b600080fd5b6102116004803603602081101561020057600080fd5b50356001600160e01b031916610801565b604080519115158252519081900360200190f35b6102a36004803603604081101561023b57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561026557600080fd5b82018360208201111561027757600080fd5b803590602001918460018302840111600160201b8311171561029857600080fd5b509092509050610824565b604080516001600160a01b039092168252519081900360200190f35b6102c7610876565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103015781810151838201526020016102e9565b50505050905090810190601f16801561032e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603602081101561035257600080fd5b503561090d565b6103856004803603604081101561036f57600080fd5b506001600160a01b03813516906020013561096f565b005b610211610a4a565b610385600480360360408110156103a557600080fd5b81359190810190604081016020820135600160201b8111156103c657600080fd5b8201836020820111156103d857600080fd5b803590602001918460018302840111600160201b831117156103f957600080fd5b509092509050610a5a565b61040c610af9565b60408051918252519081900360200190f35b6103856004803603606081101561043457600080fd5b506001600160a01b03813581169160208101359091169060400135610aff565b61040c6004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610b56565b6103856004803603604081101561049657600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156104c057600080fd5b8201836020820111156104d257600080fd5b803590602001918460018302840111600160201b831117156104f357600080fd5b509092509050610bd5565b6103856004803603606081101561051457600080fd5b506001600160a01b03813581169160208101359091169060400135610c5c565b61040c6004803603602081101561054a57600080fd5b5035610c77565b6102a36004803603602081101561056757600080fd5b5035610cdd565b6102c7610d37565b6102c7610d98565b61040c6004803603602081101561059457600080fd5b50356001600160a01b0316610e26565b610385610e8e565b6102a3610f1f565b6102a3610f2e565b610211610f3d565b6102c7610f63565b610385600480360360408110156105e257600080fd5b506001600160a01b0381351690602001351515610fc4565b6103856004803603608081101561061057600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561064a57600080fd5b82018360208201111561065c57600080fd5b803590602001918460018302840111600160201b8311171561067d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506110c9945050505050565b610211600480360360208110156106d457600080fd5b50356001600160a01b0316611127565b610385600480360360208110156106fa57600080fd5b50356001600160a01b03166111d5565b6102c76004803603602081101561072057600080fd5b5035611264565b6102a36004803603604081101561073d57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561076757600080fd5b82018360208201111561077957600080fd5b803590602001918460018302840111600160201b8311171561079a57600080fd5b509092509050611430565b610211600480360360408110156107bb57600080fd5b506001600160a01b038135811691602001351661147a565b6102a36114a8565b610385600480360360208110156107f157600080fd5b50356001600160a01b03166114b7565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600061086e8461086985858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150a92505050565b6115af565b949350505050565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109025780601f106108d757610100808354040283529160200191610902565b820191906000526020600020905b8154815290600101906020018083116108e557829003601f168201915b505050505090505b90565b6000610918826116f1565b6109535760405162461bcd60e51b815260040180806020018281038252602c815260200180612962602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061097a82610cdd565b9050806001600160a01b0316836001600160a01b031614156109cd5760405162461bcd60e51b8152600401808060200182810382526021815260200180612a326021913960400191505060405180910390fd5b806001600160a01b03166109df61170e565b6001600160a01b03161480610a005750610a00816109fb61170e565b61147a565b610a3b5760405162461bcd60e51b81526004018080602001828103825260388152602001806128d76038913960400191505060405180910390fd5b610a458383611712565b505050565b601054600160a01b900460ff1681565b610a6383610cdd565b6001600160a01b0316610a7461170e565b6001600160a01b031614610ab95760405162461bcd60e51b81526004018080602001828103825260288152602001806127dc6028913960400191505060405180910390fd5b610a458383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061178092505050565b60075490565b610b10610b0a61170e565b826117e3565b610b4b5760405162461bcd60e51b8152600401808060200182810382526031815260200180612a536031913960400191505060405180910390fd5b610a4583838361187f565b6000610b6183610e26565b8210610b9e5760405162461bcd60e51b815260040180806020018281038252602b815260200180612804602b913960400191505060405180910390fd5b6001600160a01b0383166000908152600560205260409020805483908110610bc257fe5b9060005260206000200154905092915050565b610bdd610f3d565b610c1c576040805162461bcd60e51b815260206004820181905260248201526000805160206129ba833981519152604482015290519081900360640190fd5b610a458383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119d092505050565b610a45838383604051806020016040528060008152506110c9565b6000610c81610af9565b8210610cbe5760405162461bcd60e51b815260040180806020018281038252602c815260200180612a84602c913960400191505060405180910390fd5b60078281548110610ccb57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b031680610d315760405162461bcd60e51b81526004018080602001828103825260298152602001806129396029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109025780601f106108d757610100808354040283529160200191610902565b600f805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610e1e5780601f10610df357610100808354040283529160200191610e1e565b820191906000526020600020905b815481529060010190602001808311610e0157829003601f168201915b505050505081565b60006001600160a01b038216610e6d5760405162461bcd60e51b815260040180806020018281038252602a81526020018061290f602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600360205260409020610d3190611b35565b610e96610f3d565b610ed5576040805162461bcd60e51b815260206004820181905260248201526000805160206129ba833981519152604482015290519081900360640190fd5b600d546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600d80546001600160a01b0319169055565b6010546001600160a01b031681565b600d546001600160a01b031690565b600d546000906001600160a01b0316610f5461170e565b6001600160a01b031614905090565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109025780601f106108d757610100808354040283529160200191610902565b610fcc61170e565b6001600160a01b0316826001600160a01b03161415611032576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806004600061103f61170e565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561108361170e565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6110da6110d461170e565b836117e3565b6111155760405162461bcd60e51b8152600401808060200182810382526031815260200180612a536031913960400191505060405180910390fd5b61112184848484611b39565b50505050565b600061113b826001600160a01b03166116f1565b80610d3157506010546001600160a01b031615801590610d3157506010546040805163c3c5a54760e01b81526001600160a01b0385811660048301529151919092169163c3c5a547916024808301926020929190829003018186803b1580156111a357600080fd5b505afa1580156111b7573d6000803e3d6000fd5b505050506040513d60208110156111cd57600080fd5b505192915050565b6111dd610f3d565b61121c576040805162461bcd60e51b815260206004820181905260248201526000805160206129ba833981519152604482015290519081900360640190fd5b601054600160a01b900460ff161561123357600080fd5b60108054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b0392909216919091179055565b606061126f826116f1565b6112aa5760405162461bcd60e51b815260040180806020018281038252602f815260200180612a03602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084526060939283018282801561133f5780601f106113145761010080835404028352916020019161133f565b820191906000526020600020905b81548152906001019060200180831161132257829003601f168201915b5050505050905080516000141561136657505060408051602081019091526000815261081f565b600b8160405160200180838054600181600116156101000203166002900480156113c75780601f106113a55761010080835404028352918201916113c7565b820191906000526020600020905b8154815290600101906020018083116113b3575b5050825160208401908083835b602083106113f35780518252601f1990920191602091820191016113d4565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061081f565b600061086e8461147585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150a92505050565b611b8b565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600e546001600160a01b031681565b6114bf610f3d565b6114fe576040805162461bcd60e51b815260206004820181905260248201526000805160206129ba833981519152604482015290519081900360640190fd5b61150781611db3565b50565b6060816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561154d578181015183820152602001611535565b50505050905090810190601f16801561157a5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316631ec5a31160e31b1790529350505050919050565b6000806116e083856040516020018083805190602001908083835b602083106115e95780518252601f1990920191602091820191016115ca565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116d65780601f106116ab576101008083540402835291602001916116d6565b820191906000526020600020905b8154815290600101906020018083116116b957829003601f168201915b5050505050611e54565b6001600160a01b0316949350505050565b6000908152600160205260409020546001600160a01b0316151590565b3390565b600081815260026020526040902080546001600160a01b0319166001600160a01b038416908117909155819061174782610cdd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611789826116f1565b6117c45760405162461bcd60e51b815260040180806020018281038252602c81526020018061298e602c913960400191505060405180910390fd5b6000828152600c602090815260409091208251610a4592840190612703565b60006117ee826116f1565b6118295760405162461bcd60e51b815260040180806020018281038252602c8152602001806128ab602c913960400191505060405180910390fd5b600061183483610cdd565b9050806001600160a01b0316846001600160a01b0316148061186f5750836001600160a01b03166118648461090d565b6001600160a01b0316145b8061086e575061086e818561147a565b826001600160a01b031661189282610cdd565b6001600160a01b0316146118d75760405162461bcd60e51b81526004018080602001828103825260298152602001806129da6029913960400191505060405180910390fd5b6001600160a01b03821661191c5760405162461bcd60e51b81526004018080602001828103825260248152602001806128876024913960400191505060405180910390fd5b611927838383611e68565b611932600082611712565b6001600160a01b038316600090815260036020526040902061195390611e73565b6001600160a01b038216600090815260036020526040902061197490611e8a565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604080516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2600482015290516001600160a01b038416916302571be3916024808301926020929190829003018186803b158015611a3657600080fd5b505afa158015611a4a573d6000803e3d6000fd5b505050506040513d6020811015611a6057600080fd5b505160405163c47f002760e01b81526020600482018181528451602484015284516001600160a01b039094169363c47f002793869383926044909201919085019080838360005b83811015611abf578181015183820152602001611aa7565b50505050905090810190601f168015611aec5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611b0b57600080fd5b505af1158015611b1f573d6000803e3d6000fd5b505050506040513d602081101561112157600080fd5b5490565b611b4484848461187f565b611b5084848484611e93565b6111215760405162461bcd60e51b815260040180806020018281038252603281526020018061282f6032913960400191505060405180910390fd5b600080611cbc83856040516020018083805190602001908083835b60208310611bc55780518252601f199092019160209182019101611ba6565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cb25780601f10611c8757610100808354040283529160200191611cb2565b820191906000526020600020905b815481529060010190602001808311611c9557829003601f168201915b50505050506120ce565b600e546040805163347d5e2560e21b81526001600160a01b0392831660048201818152602483019384528851604484015288519596509386169463d1f5789494919389939091606490910190602085019080838360005b83811015611d2b578181015183820152602001611d13565b50505050905090810190601f168015611d585780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611d7857600080fd5b505af1158015611d8c573d6000803e3d6000fd5b50505050611da384826001600160a01b0316612138565b6001600160a01b03169392505050565b6001600160a01b038116611df85760405162461bcd60e51b81526004018080602001828103825260268152602001806128616026913960400191505060405180910390fd5b600d546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611e61838330612275565b9392505050565b610a45838383612289565b8054611e8690600163ffffffff6122e016565b9055565b80546001019055565b6000611ea7846001600160a01b0316612322565b611eb35750600161086e565b600060606001600160a01b038616630a85bd0160e11b611ed161170e565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f4a578181015183820152602001611f32565b50505050905090810190601f168015611f775780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310611fdf5780518252601f199092019160209182019101611fc0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612041576040519150601f19603f3d011682016040523d82523d6000602084013e612046565b606091505b509150915081612097578051156120605780518082602001fd5b60405162461bcd60e51b815260040180806020018281038252603281526020018061282f6032913960400191505060405180910390fd5b60008180602001905160208110156120ae57600080fd5b50516001600160e01b031916630a85bd0160e11b14935061086e92505050565b600080838351602085016000f590506001600160a01b038116611e61576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b6001600160a01b038216612193576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61219c816116f1565b156121ee576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6121fa60008383611e68565b600081815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526003909152902061223990611e8a565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061086e8484805190602001208461235b565b6122948383836123bf565b6001600160a01b038216610a45576000818152600c60205260409020546002600019610100600184161502019091160415610a45576000818152600c60205260408120610a4591612781565b6000611e6183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612434565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061086e575050151592915050565b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff19166021820152603581019490945260558085019390935280518085039093018352607590930190925280519101206001600160a01b031690565b6123ca838383610a45565b6001600160a01b0383166123f0576123e282826124cb565b6123eb81612509565b610a45565b6001600160a01b03821661242057612408838261254d565b6000818152600660205260408120556123eb8161264f565b61242a838261254d565b610a4582826124cb565b600081848411156124c35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612488578181015183820152602001612470565b50505050905090810190601f1680156124b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6001600160a01b03821660009081526005602052604081205461257790600163ffffffff6122e016565b600083815260066020526040902054909150808214612612576001600160a01b03841660009081526005602052604081208054849081106125b457fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106125f257fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b038416600090815260056020526040902080548061263357fe5b6001900381819060005260206000200160009055905550505050565b60075460009061266690600163ffffffff6122e016565b6000838152600860205260408120546007805493945090928490811061268857fe5b9060005260206000200154905080600783815481106126a357fe5b600091825260208083209091019290925582815260089091526040902082905560078054806126ce57fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061274457805160ff1916838001178555612771565b82800160010185558215612771579182015b82811115612771578251825591602001919060010190612756565b5061277d9291506127c1565b5090565b50805460018160011615610100020316600290046000825580601f106127a75750611507565b601f01602090049060005260206000209081019061150791905b61090a91905b8082111561277d57600081556001016127c756fe4552433732313a20616363657373207265737472696374656420746f20746f6b656e206f776e6572455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a2646970667358221220010437ed4109823512ee2c9df4c8df2e412beec87b50284c29d5fdeb9eac922b64736f6c63430006040033",
  "sourceMap": "80:917:44:-:0;;;149:125;5:9:-1;2:2;;;27:1;24;17:12;2:2;149:125:44;191:16;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;577:203:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:203:37;;;;;;;;;718:40:65;-1:-1:-1;;;;;;;;718:18:65;:40;:::i;:::-;2262::70;-1:-1:-1;;;;;;;;2262:18:70;:40;:::i;:::-;1357:51:71;-1:-1:-1;;;;;;;;1357:18:71;:51;:::i;:::-;912:12:73;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;934:16:73;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1038:49:73;-1:-1:-1;;;;;;;;1038:18:73;:49;:::i;:::-;840:254;;425:94:72;;698:17:68;718:12;:10;;;:12;;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:68;-1:-1:-1;;;;;740:18:68;;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:68;-1:-1:-1;;773:43:68;;-1:-1:-1;;773:43:68;-1:-1:-1;690:6:37::1;:19:::0;;-1:-1:-1;;;;;;690:19:37::1;-1:-1:-1::0;;;;;690:19:37;::::1;;::::0;;725:51:::1;::::0;::::1;;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;21:26;;;;;7:41;;87:2:::1;69:12:::0;;::::1;65:26;61:2;54:38:::0;713:63:37;;::::1;::::0;:9:::1;::::0;41:4:-1::1;30:16:::0;;;::::1;::::0;713:63:37::1;:::i;:::-;;577:203:::0;;;80:917:44;;1451:198:65;-1:-1:-1;;;;;;1534:25:65;;;;;1526:66;;;;;-1:-1:-1;;;1526:66:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1602:33:65;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1602:40:65;1638:4;1602:40;;;1451:198::o;735:104:63:-;822:10;735:104;;:::o;80:917:44:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;80:917:44;;;-1:-1:-1;80:917:44;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "80:917:44:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;80:917:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:142:65;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;915:142:65;-1:-1:-1;;;;;;915:142:65;;:::i;:::-;;;;;;;;;;;;;;;;;;750:245:44;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;750:245:44;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;750:245:44;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;750:245:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;750:245:44;;-1:-1:-1;750:245:44;-1:-1:-1;750:245:44;:::i;:::-;;;;-1:-1:-1;;;;;750:245:44;;;;;;;;;;;;;;1199:92:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1199:92:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:209:70;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4267:209:70;;:::i;3601:381::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3601:381:70;;;;;;;;:::i;:::-;;545:28:37;;;:::i;1888:198::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1888:198:37;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;1888:198:37;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1888:198:37;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1888:198:37;;-1:-1:-1;1888:198:37;-1:-1:-1;1888:198:37;:::i;2180:103:71:-;;;:::i;:::-;;;;;;;;;;;;;;;;5978:304:70;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5978:304:70;;;;;;;;;;;;;;;;;:::i;1789:238:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1789:238:71;;;;;;;;:::i;1774:111:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;1774:111:37;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;1774:111:37;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1774:111:37;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1774:111:37;;-1:-1:-1;1774:111:37;-1:-1:-1;1774:111:37;:::i;6931:149:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6931:149:70;;;;;;;;;;;;;;;;;:::i;2621:205:71:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2621:205:71;;:::i;2948:232:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2948:232:70;;:::i;3430:89:73:-;;;:::i;488:26:37:-;;;:::i;2513:216:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2513:216:70;-1:-1:-1;;;;;2513:216:70;;:::i;1684:145:68:-;;;:::i;517:25:37:-;;;:::i;899:77:68:-;;;:::i;1250:92::-;;;:::i;1400:96:73:-;;;:::i;4775:290:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4775:290:70;;;;;;;;;;:::i;7803:286::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;7803:286:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;7803:286:70;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7803:286:70;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7803:286:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7803:286:70;;-1:-1:-1;7803:286:70;;-1:-1:-1;;;;;7803:286:70:i;1584:187:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1584:187:37;-1:-1:-1;;;;;1584:187:37;;:::i;783:151::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;783:151:37;-1:-1:-1;;;;;783:151:37;;:::i;1799:554:73:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1799:554:73;;:::i;509:238:44:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;509:238:44;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;509:238:44;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;509:238:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;509:238:44;;-1:-1:-1;509:238:44;-1:-1:-1;509:238:44;:::i;5387:154:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5387:154:70;;;;;;;;;;:::i;462:23:37:-;;;:::i;1978:115:68:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1978:115:68;-1:-1:-1;;;;;1978:115:68;;:::i;915:142:65:-;-1:-1:-1;;;;;;1017:33:65;;994:4;1017:33;;;;;;;;;;;;;915:142;;;;:::o;750:245:44:-;882:10;917:73;930:16;948:41;966:22;;948:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;948:17:44;;-1:-1:-1;;;948:41:44:i;:::-;917:12;:73::i;:::-;899:92;750:245;-1:-1:-1;;;;750:245:44:o;1199:92:73:-;1279:5;1272:12;;;;;;;;-1:-1:-1;;1272:12:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:13;;1272:12;;1279:5;;1272:12;;1279:5;1272:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:92;;:::o;4267:209:70:-;4335:7;4362:16;4370:7;4362;:16::i;:::-;4354:73;;;;-1:-1:-1;;;4354:73:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4445:24:70;;;;:15;:24;;;;;;-1:-1:-1;;;;;4445:24:70;;4267:209::o;3601:381::-;3681:13;3697:16;3705:7;3697;:16::i;:::-;3681:32;;3737:5;-1:-1:-1;;;;;3731:11:70;:2;-1:-1:-1;;;;;3731:11:70;;;3723:57;;;;-1:-1:-1;;;3723:57:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3815:5;-1:-1:-1;;;;;3799:21:70;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3799:21:70;;:62;;;;3824:37;3841:5;3848:12;:10;:12::i;:::-;3824:16;:37::i;:::-;3791:152;;;;-1:-1:-1;;;3791:152:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3954:21;3963:2;3967:7;3954:8;:21::i;:::-;3601:381;;;:::o;545:28:37:-;;;-1:-1:-1;;;545:28:37;;;;;:::o;1888:198::-;1988:17;1996:8;1988:7;:17::i;:::-;-1:-1:-1;;;;;1972:33:37;:12;:10;:12::i;:::-;-1:-1:-1;;;;;1972:33:37;;1964:86;;;;-1:-1:-1;;;1964:86:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:28;2067:8;2077:4;;2054:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2054:12:37;;-1:-1:-1;;;2054:28:37:i;2180:103:71:-;2259:10;:17;2180:103;:::o;5978:304:70:-;6137:41;6156:12;:10;:12::i;:::-;6170:7;6137:18;:41::i;:::-;6129:103;;;;-1:-1:-1;;;6129:103:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6243:32;6257:4;6263:2;6267:7;6243:13;:32::i;1789:238:71:-;1878:7;1913:16;1923:5;1913:9;:16::i;:::-;1905:5;:24;1897:80;;;;-1:-1:-1;;;1897:80:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1994:19:71;;;;;;:12;:19;;;;;:26;;2014:5;;1994:26;;;;;;;;;;;;;;1987:33;;1789:238;;;;:::o;1774:111:37:-;1103:9:68;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:68;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:68;;;;;;;;;;;;;;;1855:26:37::1;1868:4;1875:5;;1855:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;1855:8:37::1;::::0;-1:-1:-1;;;1855:26:37:i:1;6931:149:70:-:0;7034:39;7051:4;7057:2;7061:7;7034:39;;;;;;;;;;;;:16;:39::i;2621:205:71:-;2688:7;2723:13;:11;:13::i;:::-;2715:5;:21;2707:78;;;;-1:-1:-1;;;2707:78:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2802:10;2813:5;2802:17;;;;;;;;;;;;;;;;2795:24;;2621:205;;;:::o;2948:232:70:-;3012:7;3047:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3047:20:70;3085:19;3077:73;;;;-1:-1:-1;;;3077:73:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3168:5;2948:232;-1:-1:-1;;2948:232:70:o;3430:89:73:-;3504:8;3497:15;;;;;;;;-1:-1:-1;;3497:15:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3472:13;;3497:15;;3504:8;;3497:15;;3504:8;3497:15;;;;;;;;;;;;;;;;;;;;;;;;488:26:37;;;;;;;;;;;;;;;-1:-1:-1;;488:26:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2513:216:70:-;2577:7;-1:-1:-1;;;;;2604:19:70;;2596:74;;;;-1:-1:-1;;;2596:74:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2688:24:70;;;;;;:17;:24;;;;;:34;;:32;:34::i;1684:145:68:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:68;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:68;;;;;;;;;;;;;;;1774:6:::1;::::0;1753:40:::1;::::0;1790:1:::1;::::0;-1:-1:-1;;;;;1774:6:68::1;::::0;1753:40:::1;::::0;1790:1;;1753:40:::1;1803:6;:19:::0;;-1:-1:-1;;;;;;1803:19:68::1;::::0;;1684:145::o;517:25:37:-;;;-1:-1:-1;;;;;517:25:37;;:::o;899:77:68:-;963:6;;-1:-1:-1;;;;;963:6:68;899:77;:::o;1250:92::-;1329:6;;1290:4;;-1:-1:-1;;;;;1329:6:68;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:68;;1306:29;;1250:92;:::o;1400:96:73:-;1482:7;1475:14;;;;;;;;-1:-1:-1;;1475:14:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:13;;1475:14;;1482:7;;1475:14;;1482:7;1475:14;;;;;;;;;;;;;;;;;;;;;;;;4775:290:70;4889:12;:10;:12::i;:::-;-1:-1:-1;;;;;4877:24:70;:8;-1:-1:-1;;;;;4877:24:70;;;4869:62;;;;;-1:-1:-1;;;4869:62:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;4987:8;4942:18;:32;4961:12;:10;:12::i;:::-;-1:-1:-1;;;;;4942:32:70;;;;;;;;;;;;;;;;;-1:-1:-1;4942:32:70;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4942:53:70;;;;;;;;;;;5025:12;:10;:12::i;:::-;5010:48;;;;;;;;;;-1:-1:-1;;;;;5010:48:70;;;;;;;;;;;;;;4775:290;;:::o;7803:286::-;7934:41;7953:12;:10;:12::i;:::-;7967:7;7934:18;:41::i;:::-;7926:103;;;;-1:-1:-1;;;7926:103:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8039:43;8057:4;8063:2;8067:7;8076:5;8039:17;:43::i;:::-;7803:286;;;;:::o;1584:187:37:-;1655:4;1673:24;1689:6;-1:-1:-1;;;;;1681:15:37;1673:7;:24::i;:::-;:94;;;-1:-1:-1;1710:8:37;;-1:-1:-1;;;;;1710:8:37;1702:31;;;;:64;;-1:-1:-1;1737:8:37;;:29;;;-1:-1:-1;;;1737:29:37;;-1:-1:-1;;;;;1737:29:37;;;;;;;;;:8;;;;;:21;;:29;;;;;;;;;;;;;;:8;:29;;;2:2:-1;;;;27:1;24;17:12;2:2;1737:29:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1737:29:37;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1737:29:37;;1584:187;-1:-1:-1;;1584:187:37:o;783:151::-;1103:9:68;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:68;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:68;;;;;;;;;;;;;;;858:11:37::1;::::0;-1:-1:-1;;;858:11:37;::::1;;;857:12;849:21;;12:1:-1;9::::0;2:12:::1;849:21:37;874:11;:18:::0;;-1:-1:-1;;;;;;;874:18:37;;::::1;;-1:-1:-1::0;;;;;;896:34:37::1;-1:-1:-1::0;;;;;896:34:37;;;::::1;::::0;;;::::1;::::0;;783:151::o;1799:554:73:-;1866:13;1899:16;1907:7;1899;:16::i;:::-;1891:76;;;;-1:-1:-1;;;1891:76:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:19;;;;:10;:19;;;;;;;;;1978:45;;;;;;-1:-1:-1;;1978:45:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;2004:19;1978:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:9;2131:23;2158:1;2131:28;2127:220;;;-1:-1:-1;;2175:9:73;;;;;;;;;-1:-1:-1;2175:9:73;;;;2127:220;2315:8;2325:9;2298:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2298:37:73;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2298:37:73;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2298:37:73;;;2284:52;;;;;509:238:44;635:10;670:72;682:16;700:41;718:22;;700:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;700:17:44;;-1:-1:-1;;;700:41:44:i;:::-;670:11;:72::i;5387:154:70:-;-1:-1:-1;;;;;5499:25:70;;;5476:4;5499:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5387:154::o;462:23:37:-;;;-1:-1:-1;;;;;462:23:37;;:::o;1978:115:68:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:68;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:68;;;;;;;;;;;;;;;2058:28:::1;2077:8;2058:18;:28::i;:::-;1978:115:::0;:::o;305:201:44:-;397:12;476:22;423:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;423:79:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:79:44;;;-1:-1:-1;;26:21;;;22:32;6:49;;423:79:44;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;423:79:44;-1:-1:-1;;;;305:201:44;;;:::o;1336:228:37:-;1428:7;1442:13;1458:77;1508:5;1515:6;1491:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1491:31:37;;;;;;;-1:-1:-1;;;;;1491:31:37;-1:-1:-1;;;;;1491:31:37;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1491:31:37;;;1481:42;;;;;;1525:9;1458:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:77::i;:::-;-1:-1:-1;;;;;1546:14:37;;1336:228;-1:-1:-1;;;;1336:228:37:o;9266:152:70:-;9323:4;9355:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9355:20:70;9392:19;;;9266:152::o;735:104:63:-;822:10;735:104;:::o;15819:155:70:-;15884:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15884:29:70;-1:-1:-1;;;;;15884:29:70;;;;;;;;:24;;15937:16;15884:24;15937:7;:16::i;:::-;-1:-1:-1;;;;;15928:39:70;;;;;;;;;;;15819:155;;:::o;2677:212:73:-;2776:16;2784:7;2776;:16::i;:::-;2768:73;;;;-1:-1:-1;;;2768:73:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2851:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;9779:329:70:-;9864:4;9888:16;9896:7;9888;:16::i;:::-;9880:73;;;;-1:-1:-1;;;9880:73:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9963:13;9979:16;9987:7;9979;:16::i;:::-;9963:32;;10024:5;-1:-1:-1;;;;;10013:16:70;:7;-1:-1:-1;;;;;10013:16:70;;:51;;;;10057:7;-1:-1:-1;;;;;10033:31:70;:20;10045:7;10033:11;:20::i;:::-;-1:-1:-1;;;;;10033:31:70;;10013:51;:87;;;;10068:32;10085:5;10092:7;10068:16;:32::i;13577:538::-;13698:4;-1:-1:-1;;;;;13678:24:70;:16;13686:7;13678;:16::i;:::-;-1:-1:-1;;;;;13678:24:70;;13670:78;;;;-1:-1:-1;;;13670:78:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13766:16:70;;13758:65;;;;-1:-1:-1;;;13758:65:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13834:39;13855:4;13861:2;13865:7;13834:20;:39::i;:::-;13911:29;13928:1;13932:7;13911:8;:29::i;:::-;-1:-1:-1;;;;;13951:23:70;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13996:21:70;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;14040:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;14040:25:70;-1:-1:-1;;;;;14040:25:70;;;;;;;;;14081:27;;14040:20;;14081:27;;;;;;;13577:538;;;:::o;533:127:54:-;613:28;;;-1:-1:-1;;;613:28:54;;463:66;613:28;;;;;;-1:-1:-1;;;;;613:9:54;;;;;:28;;;;;;;;;;;;;;:9;:28;;;2:2:-1;;;;27:1;24;17:12;2:2;613:28:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;613:28:54;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;613:28:54;595:61;;-1:-1:-1;;;595:61:54;;613:28;595:61;;;;;;;;;;;;;;-1:-1:-1;;;;;595:55:54;;;;;;651:4;;595:61;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;595:61:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;595:61:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;595:61:54;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;1065:112:64;1156:14;;1065:112::o;8794:277:70:-;8911:32;8925:4;8931:2;8935:7;8911:13;:32::i;:::-;8961:48;8984:4;8990:2;8994:7;9003:5;8961:22;:48::i;:::-;8953:111;;;;-1:-1:-1;;;8953:111:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:381:37;1038:7;1078:13;1094:69;1136:5;1143:6;1119:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1119:31:37;;;;;;;-1:-1:-1;;;;;1119:31:37;-1:-1:-1;;;;;1119:31:37;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1119:31:37;;;1109:42;;;;;;1153:9;1094:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:69::i;:::-;1227:6;;1167:74;;;-1:-1:-1;;;1167:74:37;;-1:-1:-1;;;;;1227:6:37;;;1167:74;;;;;;;;;;;;;;;;;;;;1078:85;;-1:-1:-1;1167:59:37;;;;;;1227:6;;1235:5;;1167:74;;;;;;;;;;;;;;1227:6;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1167:74:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1167:74:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1167:74:37;;;;1275:29;1281:6;1297:5;-1:-1:-1;;;;;1289:14:37;1275:5;:29::i;:::-;-1:-1:-1;;;;;1315:14:37;;952:381;-1:-1:-1;;;952:381:37:o;2194:233:68:-;-1:-1:-1;;;;;2275:22:68;;2267:73;;;;-1:-1:-1;;;2267:73:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:6;;2355:38;;-1:-1:-1;;;;;2355:38:68;;;;2376:6;;2355:38;;2376:6;;2355:38;2403:6;:17;;-1:-1:-1;;;;;;2403:17:68;-1:-1:-1;;;;;2403:17:68;;;;;;;;;;2194:233::o;1242:162:79:-;1326:7;1352:45;1367:4;1373:8;1391:4;1352:14;:45::i;:::-;1345:52;1242:162;-1:-1:-1;;;1242:162:79:o;525:223:72:-;696:45;723:4;729:2;733:7;696:26;:45::i;1367:108:64:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;14754:1059:70:-;14883:4;14908:15;:2;-1:-1:-1;;;;;14908:13:70;;:15::i;:::-;14903:58;;-1:-1:-1;14946:4:70;14939:11;;14903:58;15030:12;15044:23;-1:-1:-1;;;;;15071:7:70;;-1:-1:-1;;;15174:12:70;:10;:12::i;:::-;15200:4;15218:7;15239:5;15079:175;;;;;;-1:-1:-1;;;;;15079:175:70;-1:-1:-1;;;;;15079:175:70;;;;;;-1:-1:-1;;;;;15079:175:70;-1:-1:-1;;;;;15079:175:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15079:175:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15079:175:70;;;-1:-1:-1;;26:21;;;22:32;6:49;;15079:175:70;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;15079:175:70;;;179:29:-1;;;;160:49;;15071:184:70;;;15079:175;;15071:184;;-1:-1:-1;15071:184:70;;-1:-1:-1;25:18;-1:-1;15071:184:70;-1:-1:-1;15071:184:70;;-1:-1:-1;15071:184:70;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15071:184:70;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15029:226:70;;;;15270:7;15265:542;;15297:17;;:21;15293:376;;15462:10;15456:17;15522:15;15509:10;15505:2;15501:19;15494:44;15411:145;15594:60;;-1:-1:-1;;;15594:60:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15265:542;15699:13;15726:10;15715:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;15715:32:70;-1:-1:-1;;;;;;15769:26:70;-1:-1:-1;;;15769:26:70;;-1:-1:-1;15761:35:70;;-1:-1:-1;;;15761:35:70;686:356:79;757:7;776:12;934:4;923:8;917:15;910:4;900:8;896:19;893:1;885:54;877:62;-1:-1:-1;;;;;;966:18:79;;958:56;;;;;-1:-1:-1;;;958:56:79;;;;;;;;;;;;;;;;;;;;;;;;;;;11838:391:70;-1:-1:-1;;;;;11917:16:70;;11909:61;;;;;-1:-1:-1;;;11909:61:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11989:16;11997:7;11989;:16::i;:::-;11988:17;11980:58;;;;;-1:-1:-1;;;11980:58:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;12049:45;12078:1;12082:2;12086:7;12049:20;:45::i;:::-;12105:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;12105:25:70;-1:-1:-1;;;;;12105:25:70;;;;;;;;12140:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12189;;12214:7;;-1:-1:-1;;;;;12189:33:70;;;12206:1;;12189:33;;12206:1;;12189:33;11838:391;;:::o;1647:186:79:-;1749:7;1775:51;1790:4;1806:8;1796:19;;;;;;1817:8;1775:14;:51::i;3526:382:73:-;3635:45;3662:4;3668:2;3672:7;3635:26;:45::i;:::-;-1:-1:-1;;;;;3695:16:73;;3691:211;;3799:19;;;;:10;:19;;;;;3793:33;;-1:-1:-1;;3793:33:73;;;;;;;;;;;:38;3789:103;;3858:19;;;;:10;:19;;;;;3851:26;;;:::i;1274:134:67:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;685:610:78:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:78;;;1237:51;-1:-1:-1;;685:610:78:o;2076:282:79:-;2235:60;;;-1:-1:-1;;;;;;2235:60:79;;;;;;;;;;;;;-1:-1:-1;;2235:60:79;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2235:60:79;;;;;;;2212:93;;;;;-1:-1:-1;;;;;2322:29:79;;2076:282::o;2832:819:71:-;2941:45;2968:4;2974:2;2978:7;2941:26;:45::i;:::-;-1:-1:-1;;;;;3001:18:71;;2997:648;;3063:40;3091:2;3095:7;3063:27;:40::i;:::-;3117;3149:7;3117:31;:40::i;:::-;2997:648;;;-1:-1:-1;;;;;3178:16:71;;3174:471;;3238:47;3271:4;3277:7;3238:32;:47::i;:::-;3441:1;3412:26;;;:17;:26;;;;;:30;3457:45;3430:7;3457:36;:45::i;3174:471::-;3533:47;3566:4;3572:7;3533:32;:47::i;:::-;3594:40;3622:2;3626:7;3594:27;:40::i;1732:187:67:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:67;;;1732:187::o;4274:183:71:-;-1:-1:-1;;;;;4387:16:71;;;;;;;:12;:16;;;;;;;;:23;;4358:26;;;:17;:26;;;;;:52;;;4420:16;;;39:1:-1;23:18;;45:23;;4420:30:71;;;;;;;;4274:183::o;4652:161::-;4755:10;:17;;4728:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;4782:24:71;;;;;;;4652:161::o;5430:1115::-;-1:-1:-1;;;;;5717:18:71;;5692:22;5717:18;;;:12;:18;;;;;:25;:32;;5747:1;5717:32;:29;:32;:::i;:::-;5759:18;5780:26;;;:17;:26;;;;;;5692:57;;-1:-1:-1;5910:28:71;;;5906:323;;-1:-1:-1;;;;;5976:18:71;;5954:19;5976:18;;;:12;:18;;;;;:34;;5995:14;;5976:34;;;;;;;;;;;;;;5954:56;;6058:11;6025:12;:18;6038:4;-1:-1:-1;;;;;6025:18:71;-1:-1:-1;;;;;6025:18:71;;;;;;;;;;;;6044:10;6025:30;;;;;;;;;;;;;;;;;;;:44;;;;6141:30;;;:17;:30;;;;;:43;;;5906:323;-1:-1:-1;;;;;6305:18:71;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5430:1115;;;;:::o;6833:1051::-;7107:10;:17;7082:22;;7107:24;;7129:1;7107:24;:21;:24;:::i;:::-;7141:18;7162:24;;;:15;:24;;;;;;7530:10;:26;;7082:49;;-1:-1:-1;7162:24:71;;7082:49;;7530:26;;;;;;;;;;;;;;7508:48;;7592:11;7567:10;7578;7567:22;;;;;;;;;;;;;;;;;;;:36;;;;7671:28;;;:15;:28;;;;;;:41;;;7822:10;:16;;;;;;;;;;;;;;;;;;;;;;;;7876:1;7849:15;:24;7865:7;7849:24;;;;;;;;;;;:28;;;;6833:1051;;;;:::o;80:917:44:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;80:917:44;;;-1:-1:-1;80:917:44;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport '../Registry.sol';\nimport './Workerpool.sol';\n\n\ncontract WorkerpoolRegistry is Registry\n{\n\t/**\n\t * Constructor\n\t */\n\tconstructor()\n\tpublic Registry(\n\t\taddress(new Workerpool()),\n\t\t\"iExec Workerpool Registry (V5)\",\n\t\t\"iExecWorkerpoolV5\")\n\t{\n\t}\n\n\t/**\n\t * Pool creation\n\t */\n\tfunction encodeInitializer(\n\t\tstring memory _workerpoolDescription)\n\tinternal pure returns (bytes memory)\n\t{\n\t\treturn abi.encodeWithSignature(\n\t\t\t\"initialize(string)\",\n\t\t\t_workerpoolDescription\n\t\t);\n\t}\n\n\tfunction createWorkerpool(\n\t\taddress          _workerpoolOwner,\n\t\tstring  calldata _workerpoolDescription)\n\texternal returns (Workerpool)\n\t{\n\t\treturn Workerpool(_mintCreate(_workerpoolOwner, encodeInitializer(_workerpoolDescription)));\n\t}\n\n\tfunction predictWorkerpool(\n\t\taddress          _workerpoolOwner,\n\t\tstring  calldata _workerpoolDescription)\n\texternal view returns (Workerpool)\n\t{\n\t\treturn Workerpool(_mintPredict(_workerpoolOwner, encodeInitializer(_workerpoolDescription)));\n\t}\n}\n",
  "sourcePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol",
  "ast": {
    "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol",
    "exportedSymbols": {
      "WorkerpoolRegistry": [
        8263
      ]
    },
    "id": 8264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8190,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/Registry.sol",
        "file": "../Registry.sol",
        "id": 8191,
        "nodeType": "ImportDirective",
        "scope": 8264,
        "sourceUnit": 7730,
        "src": "25:25:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/Workerpool.sol",
        "file": "./Workerpool.sol",
        "id": 8192,
        "nodeType": "ImportDirective",
        "scope": 8264,
        "sourceUnit": 8189,
        "src": "51:26:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8193,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7729,
              "src": "111:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$7729",
                "typeString": "contract Registry"
              }
            },
            "id": 8194,
            "nodeType": "InheritanceSpecifier",
            "src": "111:8:44"
          }
        ],
        "contractDependencies": [
          7507,
          7729,
          8188,
          9855,
          10460,
          10566,
          10578,
          10904,
          11727,
          12068,
          12111,
          12309,
          12417,
          12445,
          12469
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8263,
        "linearizedBaseContracts": [
          8263,
          7729,
          10904,
          9855,
          12111,
          12309,
          12469,
          12068,
          7507,
          12445,
          11727,
          12417,
          10566,
          10578,
          10460
        ],
        "name": "WorkerpoolRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8208,
              "nodeType": "Block",
              "src": "270:4:44",
              "statements": []
            },
            "documentation": {
              "id": 8195,
              "nodeType": "StructuredDocumentation",
              "src": "123:24:44",
              "text": "Constructor"
            },
            "id": 8209,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "191:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Workerpool_$8188_$",
                            "typeString": "function () returns (contract Workerpool)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 8200,
                            "name": "Workerpool",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 8188,
                            "src": "195:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Workerpool_$8188",
                              "typeString": "contract Workerpool"
                            }
                          }
                        },
                        "id": 8202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "191:16:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Workerpool_$8188",
                          "typeString": "contract Workerpool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Workerpool_$8188",
                          "typeString": "contract Workerpool"
                        }
                      ],
                      "id": 8199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "183:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8198,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "183:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 8203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "183:25:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "694578656320576f726b6572706f6f6c2052656769737472792028563529",
                    "id": 8204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:32:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ba5cb470918f8c7c0143edb5525432db3242608621e9c139ec8e475c5f001e5c",
                      "typeString": "literal_string \"iExec Workerpool Registry (V5)\""
                    },
                    "value": "iExec Workerpool Registry (V5)"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6945786563576f726b6572706f6f6c5635",
                    "id": 8205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "248:19:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_935bfc3bb81ca3e38c20eb5143fca20baaf727aceff2b180b02bd713e8d2b088",
                      "typeString": "literal_string \"iExecWorkerpoolV5\""
                    },
                    "value": "iExecWorkerpoolV5"
                  }
                ],
                "id": 8206,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8197,
                  "name": "Registry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7729,
                  "src": "171:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Registry_$7729_$",
                    "typeString": "type(contract Registry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "171:97:44"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:2:44"
            },
            "returnParameters": {
              "id": 8207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:44"
            },
            "scope": 8263,
            "src": "149:125:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8223,
              "nodeType": "Block",
              "src": "412:94:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a6528737472696e6729",
                        "id": 8219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "451:20:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        "value": "initialize(string)"
                      },
                      {
                        "argumentTypes": null,
                        "id": 8220,
                        "name": "_workerpoolDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8212,
                        "src": "476:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8217,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "423:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 8218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "423:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:79:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8216,
                  "id": 8222,
                  "nodeType": "Return",
                  "src": "416:86:44"
                }
              ]
            },
            "documentation": {
              "id": 8210,
              "nodeType": "StructuredDocumentation",
              "src": "277:26:44",
              "text": "Pool creation"
            },
            "id": 8224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeInitializer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8212,
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8224,
                  "src": "335:36:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:41:44"
            },
            "returnParameters": {
              "id": 8216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8215,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8224,
                  "src": "397:12:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:14:44"
            },
            "scope": 8263,
            "src": "305:201:44",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8242,
              "nodeType": "Block",
              "src": "648:99:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8235,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8226,
                            "src": "682:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8237,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8228,
                                "src": "718:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8236,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8224,
                              "src": "700:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8234,
                          "name": "_mintCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7627,
                          "src": "670:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) returns (uint256)"
                          }
                        },
                        "id": 8239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:72:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8233,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8188,
                      "src": "659:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8188_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:84:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8232,
                  "id": 8241,
                  "nodeType": "Return",
                  "src": "652:91:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e40238f4",
            "id": 8243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8226,
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8243,
                  "src": "538:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8228,
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8243,
                  "src": "575:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8227,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:81:44"
            },
            "returnParameters": {
              "id": 8232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8243,
                  "src": "635:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8188",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8230,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8188,
                    "src": "635:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "634:12:44"
            },
            "scope": 8263,
            "src": "509:238:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8261,
              "nodeType": "Block",
              "src": "895:100:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8254,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8245,
                            "src": "930:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8256,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8247,
                                "src": "966:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8255,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8224,
                              "src": "948:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "948:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8253,
                          "name": "_mintPredict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7656,
                          "src": "917:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (uint256)"
                          }
                        },
                        "id": 8258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:73:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8252,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8188,
                      "src": "906:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8188_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:85:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8251,
                  "id": 8260,
                  "nodeType": "Return",
                  "src": "899:92:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "064a6c2a",
            "id": 8262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8262,
                  "src": "780:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8247,
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8262,
                  "src": "817:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:81:44"
            },
            "returnParameters": {
              "id": 8251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8250,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8262,
                  "src": "882:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8188",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8249,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8188,
                    "src": "882:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:12:44"
            },
            "scope": 8263,
            "src": "750:245:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8264,
        "src": "80:917:44"
      }
    ],
    "src": "0:998:44"
  },
  "legacyAST": {
    "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/WorkerpoolRegistry.sol",
    "exportedSymbols": {
      "WorkerpoolRegistry": [
        8263
      ]
    },
    "id": 8264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8190,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/Registry.sol",
        "file": "../Registry.sol",
        "id": 8191,
        "nodeType": "ImportDirective",
        "scope": 8264,
        "sourceUnit": 7730,
        "src": "25:25:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/PoCo-dev/contracts/registries/workerpools/Workerpool.sol",
        "file": "./Workerpool.sol",
        "id": 8192,
        "nodeType": "ImportDirective",
        "scope": 8264,
        "sourceUnit": 8189,
        "src": "51:26:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8193,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7729,
              "src": "111:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$7729",
                "typeString": "contract Registry"
              }
            },
            "id": 8194,
            "nodeType": "InheritanceSpecifier",
            "src": "111:8:44"
          }
        ],
        "contractDependencies": [
          7507,
          7729,
          8188,
          9855,
          10460,
          10566,
          10578,
          10904,
          11727,
          12068,
          12111,
          12309,
          12417,
          12445,
          12469
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8263,
        "linearizedBaseContracts": [
          8263,
          7729,
          10904,
          9855,
          12111,
          12309,
          12469,
          12068,
          7507,
          12445,
          11727,
          12417,
          10566,
          10578,
          10460
        ],
        "name": "WorkerpoolRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8208,
              "nodeType": "Block",
              "src": "270:4:44",
              "statements": []
            },
            "documentation": {
              "id": 8195,
              "nodeType": "StructuredDocumentation",
              "src": "123:24:44",
              "text": "Constructor"
            },
            "id": 8209,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "191:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Workerpool_$8188_$",
                            "typeString": "function () returns (contract Workerpool)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 8200,
                            "name": "Workerpool",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 8188,
                            "src": "195:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Workerpool_$8188",
                              "typeString": "contract Workerpool"
                            }
                          }
                        },
                        "id": 8202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "191:16:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Workerpool_$8188",
                          "typeString": "contract Workerpool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Workerpool_$8188",
                          "typeString": "contract Workerpool"
                        }
                      ],
                      "id": 8199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "183:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 8198,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "183:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 8203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "183:25:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "694578656320576f726b6572706f6f6c2052656769737472792028563529",
                    "id": 8204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:32:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ba5cb470918f8c7c0143edb5525432db3242608621e9c139ec8e475c5f001e5c",
                      "typeString": "literal_string \"iExec Workerpool Registry (V5)\""
                    },
                    "value": "iExec Workerpool Registry (V5)"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6945786563576f726b6572706f6f6c5635",
                    "id": 8205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "248:19:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_935bfc3bb81ca3e38c20eb5143fca20baaf727aceff2b180b02bd713e8d2b088",
                      "typeString": "literal_string \"iExecWorkerpoolV5\""
                    },
                    "value": "iExecWorkerpoolV5"
                  }
                ],
                "id": 8206,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8197,
                  "name": "Registry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7729,
                  "src": "171:8:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Registry_$7729_$",
                    "typeString": "type(contract Registry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "171:97:44"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:2:44"
            },
            "returnParameters": {
              "id": 8207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:44"
            },
            "scope": 8263,
            "src": "149:125:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8223,
              "nodeType": "Block",
              "src": "412:94:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a6528737472696e6729",
                        "id": 8219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "451:20:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        "value": "initialize(string)"
                      },
                      {
                        "argumentTypes": null,
                        "id": 8220,
                        "name": "_workerpoolDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8212,
                        "src": "476:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f62d188800b594eda156757988de1a22139f89fbcb7bfc58e96e79b054b5cb47",
                          "typeString": "literal_string \"initialize(string)\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8217,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "423:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 8218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "423:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:79:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8216,
                  "id": 8222,
                  "nodeType": "Return",
                  "src": "416:86:44"
                }
              ]
            },
            "documentation": {
              "id": 8210,
              "nodeType": "StructuredDocumentation",
              "src": "277:26:44",
              "text": "Pool creation"
            },
            "id": 8224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeInitializer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8212,
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8224,
                  "src": "335:36:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "331:41:44"
            },
            "returnParameters": {
              "id": 8216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8215,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8224,
                  "src": "397:12:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:14:44"
            },
            "scope": 8263,
            "src": "305:201:44",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8242,
              "nodeType": "Block",
              "src": "648:99:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8235,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8226,
                            "src": "682:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8237,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8228,
                                "src": "718:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8236,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8224,
                              "src": "700:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8234,
                          "name": "_mintCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7627,
                          "src": "670:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) returns (uint256)"
                          }
                        },
                        "id": 8239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:72:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8233,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8188,
                      "src": "659:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8188_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:84:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8232,
                  "id": 8241,
                  "nodeType": "Return",
                  "src": "652:91:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e40238f4",
            "id": 8243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8226,
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8243,
                  "src": "538:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8228,
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8243,
                  "src": "575:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8227,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:81:44"
            },
            "returnParameters": {
              "id": 8232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8243,
                  "src": "635:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8188",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8230,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8188,
                    "src": "635:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "634:12:44"
            },
            "scope": 8263,
            "src": "509:238:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8261,
              "nodeType": "Block",
              "src": "895:100:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8254,
                            "name": "_workerpoolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8245,
                            "src": "930:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8256,
                                "name": "_workerpoolDescription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8247,
                                "src": "966:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 8255,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8224,
                              "src": "948:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 8257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "948:41:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8253,
                          "name": "_mintPredict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7656,
                          "src": "917:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (uint256)"
                          }
                        },
                        "id": 8258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:73:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8252,
                      "name": "Workerpool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8188,
                      "src": "906:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Workerpool_$8188_$",
                        "typeString": "type(contract Workerpool)"
                      }
                    },
                    "id": 8259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:85:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "functionReturnParameters": 8251,
                  "id": 8260,
                  "nodeType": "Return",
                  "src": "899:92:44"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "064a6c2a",
            "id": 8262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictWorkerpool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "name": "_workerpoolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8262,
                  "src": "780:33:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8247,
                  "name": "_workerpoolDescription",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8262,
                  "src": "817:39:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:81:44"
            },
            "returnParameters": {
              "id": 8251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8250,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8262,
                  "src": "882:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Workerpool_$8188",
                    "typeString": "contract Workerpool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8249,
                    "name": "Workerpool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8188,
                    "src": "882:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Workerpool_$8188",
                      "typeString": "contract Workerpool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:12:44"
            },
            "scope": 8263,
            "src": "750:245:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8264,
        "src": "80:917:44"
      }
    ],
    "src": "0:998:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9711B2E71882e3a4879DB34cd6964f3Fb839e3A7"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-16T11:20:17.337Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Constructor"
    }
  }
}
