ScheduleProvider@startuml


:iExecCloudUser:
:DappUser:
:AppProvider:
:ScheduleProvider:
:DatasetProvider:
:ResourceProvider:


cloud {
  [MyDapp]
  [IexecAPI]
}
component [MyDapp]
component [IexecAPI]
[IexecAPI] <|-right-  [MyDapp]



DappUser -down-> [MyDapp]: use


cloud {
  [TaskRequest]
}

component [TaskRequest]

MyDapp <-down-> [TaskRequest]: owner

iExecCloudUser -down-> [TaskRequest]: owner

cloud {
  [App]
}
component [App]
component [AppRepository]


cloud {
  [Dataset]
}
component [Dataset]
component [DatasetRepository]


cloud {
  [WorkerPool]
}

component [WorkerPool]
component [iexec-scheduler]
component [ResultRepository]

component [iexec-worker]

cloud {
  [iExecHub]
}

cloud {
  [RLC Token]
}

component [iExecHub]
component [RLC Token]


[iExecHub] <-right-> [RLC Token]


AppProvider -up-> [App]: owner
AppProvider -down-> AppRepository: expose

DatasetProvider -up-> [Dataset]: owner
DatasetProvider -down-> DatasetRepository: expose

ScheduleProvider -up-> [WorkerPool]: owner


ScheduleProvider -down-> [iexec-scheduler]: control
ScheduleProvider -down-> [ResultRepository]: control and expose
ResultRepository <-left-> [iexec-scheduler]


[Dataset] <-up-> [iExecHub]
[App] <-up-> [iExecHub]

[iExecHub] <-down-> [WorkerPool]
[iExecHub] <-up-> [TaskRequest]

[iexec-scheduler] <-up-> [WorkerPool]
[iexec-worker] <-up-> [WorkerPool]

[ResourceProvider] -right-> [iexec-worker]: control

[iexec-worker] <-right-> [iexec-scheduler]


[iexec-worker] <-up-> [AppRepository]

[iexec-worker] <-up-> [DatasetRepository]


@enduml
